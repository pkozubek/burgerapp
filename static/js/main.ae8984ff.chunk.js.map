{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Layout/Layout.module.css","assets/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/Menu/Menu.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/LoginScreen/LoginScreen.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Menu/Menu.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/WithError/WithError.js","store/actions/login.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/orders.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/shared.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/LoginScreen/LoginScreen.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/utitlity.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/login.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Logo","Open","Close","DesktopOnly","BuildControl","Label","Less","More","Input","InputElement","Invalid","Toolbar","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","Menu","Backdrop","Burger","Modal","Loader","load4","CheckoutSummary","ContactData","Order","LoginScreen","logo","props","react_default","a","createElement","className","styles","alt","src","logoImg","navigationItem","react_router_dom","to","link","exact","activeClassName","children","navigationItems","isAuth","menu","onClick","click","toolbar","backdrop","show","sideDrawer","currentClasses","Fragment","join","Layout","state","showSideDrawer","sideDrawerHandler","_this","setState","this","classes","React","Component","connect","login","token","burgerIngredient","ingridient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","index","BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","disabled","removeFunc","addFunc","Number","cost","toFixed","ctrl","removeHandler","addHandler","disabledInfo","wasOrdererClick","orderBlocked","nextProps","nextState","style","transform","opacity","button","buttonType","ingr","burgerBuilder","listOfOrder","ingredientsKey","cancelClick","checkoutClick","instance","axios","create","baseURL","loader","withError","WrappedCopoment","_React$Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","confirmError","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","loginSuccess","userId","logOut","localStorage","removeItem","handleTokenExpire","expireTime","dispatch","setTimeout","changeRedirect","url","urlRedirect","BurgerBuilder","wasOrdered","loading","possibleOrderHandler","sum","wasOrderedHandler","changeURL","history","push","cancelOrderHandler","checkoutHandler","orderInit","handleLoading","modal","OrderSummary","Spinner","ingredientInit","objectSpread","currentModal","onIgredientDelete","onIgredientAdd","isBuilded","name","ingredientName","actions","get","then","data","catch","WithError","checkoutSummary","width","height","margin","cancelFunction","continueFunction","input","inputElement","newStyle","isValid","shouldValid","moded","elementType","assign","elementConfig","onChange","change","options","option","displayValue","labelText","checkValidity","rules","required","trim","minLength","maxLength","isEmail","test","orderForm","placeholder","validation","valid","email","adress","delivery","formIsValid","changeValHandler","event","inputId","updatedForm","updatedFormElement","target","updatedFormIsValid","elementId","submitHandler","preventDefault","orderHandler","formData","formElementId","postData","orderData","handleBurgerOrder","formArray","keyVal","id","config","form","onSubmit","formElement","order","post","burgerOrderFail","orderActions","Checkout","checkoutCancel","goBack","checkoutContinue","replace","summary","react_router","purchasedRedirect","purchased","path","match","component","val","ingredientText","ig","Orders","handleFetchOrders","orders","storedOrders","fetchedOrders","fetchOrdersFail","inputs","password","register","controlName","updatedInputs","defineProperty","handleLoginClick","loginHandle","changeMethod","prevState","redirectUrl","loginType","formOutput","react","errorOutput","authRedirect","Styles","load","isRegister","returnSecureToken","Date","getTime","expiresIn","setItem","idToken","localId","err","Logout","logUserOut","App","checkLoginStatus","routes","containers_Layout_Layout","withRouter","getItem","expirationDate","Boolean","window","location","hostname","updateObject","oldObject","updatedProps","initialState","INGREDIENT_PRICE","salad","bacon","cheese","meat","reducer","undefined","action","updatedIngredientAdd","addIngredient","updatedIngredientRem","removeIngredient","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","ordersReducer","loginReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uFACAA,EAAAC,QAAA,CAAkBC,YAAA,sCAAAC,SAAA,mCAAAC,OAAA,iCAAAC,OAAA,iCAAAC,KAAA,+BAAAC,OAAA,iCAAAC,MAAA,gCAAAC,MAAA,uDCAlBT,EAAAC,QAAA,CAAkBS,WAAA,+BAAAC,KAAA,yBAAAC,KAAA,yBAAAC,MAAA,0BAAAC,YAAA,oDCAlBd,EAAAC,QAAA,CAAkBc,aAAA,mCAAAC,MAAA,4BAAAC,KAAA,2BAAAC,KAAA,6CCAlBlB,EAAAC,QAAA,CAAkBkB,MAAA,qBAAAH,MAAA,qBAAAI,aAAA,4BAAAC,QAAA,4CCAlBrB,EAAAC,QAAA,CAAkBqB,QAAA,yBAAAX,KAAA,sBAAAG,YAAA,kDCAlBd,EAAAC,QAAA,CAAkBsB,eAAA,uCAAAC,OAAA,kDCAlBxB,EAAAC,QAAA,CAAkBwB,cAAA,qCAAAC,YAAA,mCAAAC,OAAA,gDCAlB3B,EAAAC,QAAA,CAAkB2B,OAAA,uBAAAC,QAAA,wBAAAC,OAAA,iDCAlB9B,EAAAC,QAAA,CAAkB8B,QAAA,0CCDlB/B,EAAAC,QAAiB+B,EAAAC,EAAuB,yDCCxCjC,EAAAC,QAAA,CAAkBU,KAAA,qCCAlBX,EAAAC,QAAA,CAAkBiC,gBAAA,4DCAlBlC,EAAAC,QAAA,CAAkBkC,KAAA,qCCAlBnC,EAAAC,QAAA,CAAkBmC,SAAA,6CCAlBpC,EAAAC,QAAA,CAAkBoC,OAAA,yCCAlBrC,EAAAC,QAAA,CAAkBqC,MAAA,uCCAlBtC,EAAAC,QAAA,CAAkBsC,OAAA,wBAAAC,MAAA,yCCAlBxC,EAAAC,QAAA,CAAkBwC,gBAAA,2DCAlBzC,EAAAC,QAAA,CAAkByC,YAAA,mDCAlB1C,EAAAC,QAAA,CAAkB0C,MAAA,uCCAlB3C,EAAAC,QAAA,CAAkB2C,YAAA,uTCWHC,EARF,SAACC,GACV,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOxC,MACrBoC,EAAAC,EAAAC,cAAA,OAAKG,IAAM,OAAOC,IAAOC,kDCQlBC,EAXQ,SAACT,GACpB,OACQC,EAAAC,EAAAC,cAAA,MAAIC,UAAaC,IAAO5B,gBACpBwB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIC,GAAMX,EAAMY,KAAMC,OAAK,EACvBC,gBAAmBT,IAAO3B,QACzBsB,EAAMe,YCMZC,EAZS,SAAChB,GACrB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAaC,IAAOjB,iBAChBa,EAAAC,EAAAC,cAAC1B,EAAD,CAAgBmC,KAAO,IAAIlC,QAAU,GAArC,UACHsB,EAAMiB,OAAShB,EAAAC,EAAAC,cAAC1B,EAAD,CAAgBmC,KAAO,WAAvB,UAA2D,KACzEZ,EAAMiB,OAEFhB,EAAAC,EAAAC,cAAC1B,EAAD,CAAgBmC,KAAO,WAAvB,UADAX,EAAAC,EAAAC,cAAC1B,EAAD,CAAgBmC,KAAO,UAAvB,4BCGHM,EAVF,SAAClB,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOhB,KAAM8B,QAAWnB,EAAMoB,OAC5CnB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,cCUGkB,EAZC,SAACrB,GAAD,OACZC,EAAAC,EAAAC,cAAA,UAAQC,UAAaC,IAAO7B,SACxByB,EAAAC,EAAAC,cAACd,EAAD,CAAM+B,MAASpB,EAAMoB,QACrBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOxC,MACrBoC,EAAAC,EAAAC,cAACtC,EAAD,OAEJoC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOrC,aACrBiC,EAAAC,EAAAC,cAACf,EAAD,CAAiB6B,OAAUjB,EAAMiB,8CCN9BK,EAJE,SAACtB,GACd,OAAOA,EAAMuB,KAAOtB,EAAAC,EAAAC,cAAA,OAAKgB,QAAWnB,EAAMoB,MAAOhB,UAAaC,IAAOf,WAAmB,MCwB7EkC,EAvBI,SAACxB,GAEhB,IAAIyB,EAAiB,CAACpB,IAAOzC,WAAYyC,IAAOtC,OAKhD,OAHGiC,EAAMuB,OACLE,EAAiB,CAACpB,IAAOzC,WAAYyC,IAAOvC,OAG5CmC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACAzB,EAAAC,EAAAC,cAAA,OAAKC,UAAaqB,EAAeE,KAAK,KAAMR,QAAWnB,EAAMoB,OACzDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOxC,MACrBoC,EAAAC,EAAAC,cAACtC,EAAD,OAEJoC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACf,EAAD,CAAiB6B,OAAUjB,EAAMiB,WAGzChB,EAAAC,EAAAC,cAACb,EAAD,CAAU8B,MAASpB,EAAMoB,MAAOG,KAAQvB,EAAMuB,SChBhDK,6MAEFC,MAAQ,CACJC,gBAAgB,KAGpBC,kBAAoB,WAChBC,EAAKC,SAAS,CAACH,gBAAkBE,EAAKH,MAAMC,0FAKhD,OACI7B,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACIzB,EAAAC,EAAAC,cAAC3B,EAAD,CACA4C,MAASc,KAAKH,kBACdd,OAAUiB,KAAKlC,MAAMiB,SACrBhB,EAAAC,EAAAC,cAACvC,EAAD,CACAqD,OAAUiB,KAAKlC,MAAMiB,OACrBM,KAAQW,KAAKL,MAAMC,eACnBV,MAASc,KAAKH,oBACd9B,EAAAC,EAAAC,cAAA,QAAMC,UAAa+B,IAAQlD,SACtBiD,KAAKlC,MAAMe,kBAtBPqB,IAAMC,WAmCZC,cANS,SAAAT,GACpB,MAAO,CACHZ,OAA6B,MAArBY,EAAMU,MAAMC,QAIbF,CAAyBV,oDCEzBa,EAvCU,SAACzC,GACtB,IAAI0C,EAAa,KAEjB,OAAQ1C,EAAM2C,MACV,IAAM,eACFD,EAAazC,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQ/E,cACvC,MACJ,IAAM,YACFsF,EACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQ9E,UACtB4C,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQ7E,SAC1B2C,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQ5E,UAGlC,MACJ,IAAK,OACEmF,EAAazC,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQ3E,OACtC,MACR,IAAK,SACDkF,EAAazC,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQ1E,SACnC,MACR,IAAK,QACDiF,EAAazC,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQzE,QACnC,MACR,IAAK,QACDgF,EAAazC,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQxE,QACnC,MACR,QACI+E,EAAa,KAIrB,OAAOA,GCPIE,EAzBA,SAAC5C,GAEZ,IAAI6C,EAAyBC,OAAOC,KAAK/C,EAAMgD,aAAaC,IACxD,SAAAC,GACQ,OAAOJ,OAAAK,EAAA,EAAAL,CAAIM,MAAMpD,EAAMgD,YAAYE,KAClCD,IAAI,SAACI,EAAEC,GACJ,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,CAAkBC,IAAON,EAAQI,EAAOX,KAAQO,QAE5DO,OAAO,SAACC,EAAIC,GACX,OAAOD,EAAIE,OAAOD,IACpB,IAMV,OAJqC,IAAlCd,EAAuBgB,SACtBhB,EAAyB5C,EAAAC,EAAAC,cAAA,yCAIzBF,EAAAC,EAAAC,cAAA,OAAKC,UAAa+B,IAAQ5C,QACtBU,EAAAC,EAAAC,cAACoD,EAAD,CAAkBZ,KAAO,cACpBE,EACL5C,EAAAC,EAAAC,cAACoD,EAAD,CAAkBZ,KAAO,qDCXtBmB,EAVK,SAAC9D,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOpC,cACrBgC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOnC,OAAQ8B,EAAM+D,OACvC9D,EAAAC,EAAAC,cAAA,UAAQ6D,SAAYhE,EAAMgE,SAAU5D,UAAaC,IAAOlC,KAAMgD,QAAWnB,EAAMiE,YAA/E,QACAhE,EAAAC,EAAAC,cAAA,UAAQC,UAAaC,IAAOjC,KAAM+C,QAAWnB,EAAMkE,SAAnD,UC8BG5B,eANS,SAACT,GACrB,MAAM,CACFZ,OAA8B,OAAtBY,EAAMU,MAAMC,QAIbF,CAjCM,SAACtC,GAQlB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAO1B,eACrBsB,EAAAC,EAAAC,cAAA,0BAAiBF,EAAAC,EAAAC,cAAA,SAAIgE,OAAOnE,EAAMoE,MAAMC,QAAQ,KATvC,CACb,CAACN,MAAO,QAASpB,KAAM,SACvB,CAACoB,MAAO,QAASpB,KAAM,SACvB,CAACoB,MAAO,SAAUpB,KAAM,UACxB,CAACoB,MAAO,OAAQpB,KAAM,SAMRM,IAAI,SAAAqB,GAAI,OACdrE,EAAAC,EAAAC,cAAClC,EAAD,CACIgG,WAAc,kBAAIjE,EAAMuE,cAAcD,EAAK3B,OAC3CuB,QAAW,kBAAIlE,EAAMwE,WAAWF,EAAK3B,OACrCa,IAAOc,EAAKP,MAAOA,MAASO,EAAKP,MACjCC,SAAYhE,EAAMyE,aAAaH,EAAK3B,UAG5C1C,EAAAC,EAAAC,cAAA,UACIgB,QAAWnB,EAAM0E,gBACjBtE,UAAaC,IAAOzB,YACpBoF,SAAYhE,EAAM2E,cAAe3E,EAAMiB,OAAS,QAAS,qBAH7D,4BCKGzB,iMAvBWoF,EAAUC,GAC5B,OAAOD,EAAUrD,OAASW,KAAKlC,MAAMuB,MAAQqD,EAAU7D,WAAamB,KAAKlC,MAAMe,0CAI/E,OACId,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACAzB,EAAAC,EAAAC,cAACb,EAAD,CACAiC,KAAQW,KAAKlC,MAAMuB,KACnBH,MACIc,KAAKlC,MAAMoB,QAGfnB,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,KAAOb,MACzBsF,MAAS,CAACC,UAAW7C,KAAKlC,MAAMuB,KAAO,gBAAkB,mBACjDyD,QAAS9C,KAAKlC,MAAMuB,KAAO,IAAM,MACpCW,KAAKlC,MAAMe,kBAlBRqB,IAAMC,+BCQX4C,GATA,SAACjF,GACZ,OAAOC,EAAAC,EAAAC,cAAA,UACH6D,SAAYhE,EAAMgE,SAClB5D,UAAa,CAACC,KAAOvB,OAAQuB,KAAOL,EAAMkF,aAAavD,KAAK,KAC5DR,QAAWnB,EAAMoB,OAChBpB,EAAMe,WC8BAuB,eANS,SAACT,GACrB,MAAM,CACFsD,KAAMtD,EAAMuD,cAAcpC,cAInBV,CAlCM,SAACtC,GAElB,IAAIqF,EAAc,KASlB,OARGrF,EAAMmF,OACTE,EAAcvC,OAAOC,KAAK/C,EAAMgD,aAC/BC,IAAI,SAACqC,GACF,OAAQrF,EAAAC,EAAAC,cAAA,MAAIqD,IAAO8B,GAAiBA,EAA5B,MAA+CtF,EAAMgD,YAAYsC,OAMzErF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACKkF,GAELpF,EAAAC,EAAAC,cAAA,kBAAUH,EAAMoE,MAChBnE,EAAAC,EAAAC,cAACrB,GAAD,CACAoG,WAAa,SACb9D,MAAQpB,EAAMuF,aAFd,UAGAtF,EAAAC,EAAAC,cAACrB,GAAD,CACAsC,MAASpB,EAAMwF,cACfN,WAAa,WAFb,mCCnBGO,GAJEC,KAAMC,OAAO,CAC1BC,QAAS,gECMEC,GANA,SAAC7F,GACR,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOZ,QAAvB,YC2CGqG,GA5CG,SAACC,EAAgBL,GAC/B,gBAAAM,GAAA,SAAAC,IAAA,IAAAC,EAAAlE,EAAAc,OAAAqD,EAAA,EAAArD,CAAAZ,KAAA+D,GAAA,QAAAG,EAAAC,UAAAxC,OAAAyC,EAAA,IAAAlD,MAAAgD,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GAAA,OAAAvE,EAAAc,OAAA0D,EAAA,EAAA1D,CAAAZ,MAAAgE,EAAApD,OAAA2D,EAAA,EAAA3D,CAAAmD,IAAAS,KAAAC,MAAAT,EAAA,CAAAhE,MAAA0B,OAAA0C,MAEIzE,MAAQ,CACJ+E,MAAO,MAHf5E,EAuBI6E,aAAe,WACX7E,EAAKC,SAAS,CAAC2E,MAAO,QAxB9B5E,EAAA,OAAAc,OAAAgE,EAAA,EAAAhE,CAAAmD,EAAAD,GAAAlD,OAAAiE,EAAA,EAAAjE,CAAAmD,EAAA,EAAAzC,IAAA,oBAAAwD,MAAA,WAMuB,IAAAC,EAAA/E,KACfA,KAAKgF,eAAiBxB,EAAMyB,aAAaC,QAAQC,IAAI,SAAAC,GAGjD,OAFAL,EAAKhF,SAAS,CAAC2E,MAAO,OAEfU,IAGXpF,KAAKqF,eAAiB7B,EAAMyB,aAAaK,SAASH,IAAI,SAAAI,GAAG,OAAIA,GAAI,SAAAb,GAC7DK,EAAKhF,SAAS,CAAC2E,MAAOA,QAdlC,CAAApD,IAAA,sBAAAwD,MAAA,WAmBQtB,EAAMyB,aAAaC,QAAQM,MAAMxF,KAAKgF,gBACtCxB,EAAMyB,aAAaK,SAASE,MAAMxF,KAAKqF,kBApB/C,CAAA/D,IAAA,SAAAwD,MAAA,WA4BQ,OACI/G,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACIzB,EAAAC,EAAAC,cAACwH,GAAD,CACApG,KAAQW,KAAKL,MAAM+E,MACnBxF,MAASc,KAAK2E,cACT3E,KAAKL,MAAM+E,MAAQ1E,KAAKL,MAAM+E,MAAMgB,QAAU,MAEnD3H,EAAAC,EAAAC,cAAC4F,EAAoB7D,KAAKlC,YAnC1CiG,EAAA,CAAqB7D,IAAMC,YCWlBwF,GAAe,SAACrF,EAAOsF,GAChC,MAAM,CACFnF,KCFqB,gBDGrBH,MAAOA,EACPsF,OAAQA,IAIHC,GAAS,WAKlB,OAJAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UAElB,CACFtF,KCZoB,iBDgBfuF,GAAoB,SAACC,GAC9B,OAAO,SAAAC,GACHC,WAAW,kBAAKD,EAASL,OAAyB,IAAbI,KAIhCG,GAAiB,SAACC,GAC3B,MAAM,CACF5F,KCjCuB,kBDkCvB6F,YAAcD,IE/BhBE,8MAEF5G,MAAQ,CACJ8C,cAAc,EACd+D,YAAY,EACZC,SAAS,KAObC,qBAAuB,SAAC5F,GAQpB,OAPUF,OAAOC,KAAKC,GAAaC,IAAI,SAACC,GACpC,OAAOF,EAAYE,KACpBO,OAAO,SAACoF,EAAIlF,GACX,OAAOkF,EAAMlF,GACf,IAEuB,KAI7BmF,kBAAoB,WAEb9G,EAAKhC,MAAMiB,OACVe,EAAKC,SAAS,CAACyG,YAAY,KAE3B1G,EAAKhC,MAAM+I,UAAU,aACrB/G,EAAKhC,MAAMgJ,QAAQC,KAAK,cAIhCC,mBAAqB,WACjBlH,EAAKC,SAAS,CAACyG,YAAa1G,EAAKH,MAAM6G,gBAG3CS,gBAAkB,WACdnH,EAAKhC,MAAMoJ,YACXpH,EAAKhC,MAAMgJ,QAAQC,KAAK,gBAG5BI,cAAgB,WAEZ,IAAIC,EAAOrJ,EAAAC,EAAAC,cAACoJ,GAAD,CACX/D,cAAiBxD,EAAKmH,gBACtB/E,KAAQpC,EAAKhC,MAAMoE,KACnBmB,YAAevD,EAAKkH,mBACpBlG,YAAehB,EAAKhC,MAAMmF,OAM1B,OAHGnD,EAAKH,MAAM8G,UACVW,EAAQrJ,EAAAC,EAAAC,cAACqJ,GAAD,OAELF,sFA7CPpH,KAAKlC,MAAMyJ,kDAmDX,IAAIhF,EAAY3B,OAAA4G,EAAA,EAAA5G,CAAA,GACTZ,KAAKlC,MAAMmF,MAGlB,IAAI,IAAI3B,KAAOiB,EACXA,EAAajB,GAAOiB,EAAajB,IAAQ,EAG7C,IAAImG,EAAezH,KAAKmH,gBAEpBzG,EAAS,KAwBb,OAtBIA,EADDV,KAAKlC,MAAMmF,KAEVlF,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACIzB,EAAAC,EAAAC,cAACZ,EAAD,CAAQyD,YAAed,KAAKlC,MAAMmF,OAClClF,EAAAC,EAAAC,cAACxB,GAAD,CACI4F,cAAiBrC,KAAKlC,MAAM4J,kBAC5BpF,WAActC,KAAKlC,MAAM6J,eACzBpF,aAAgBA,EAChBL,KAAQlC,KAAKlC,MAAMoE,KACnBO,aAAgBzC,KAAK0G,qBAAqB1G,KAAKlC,MAAMmF,MACrDT,gBAAmBxC,KAAK4G,qBAIvB7I,EAAAC,EAAAC,cAACqJ,GAAD,MAGVtH,KAAKlC,MAAM4G,QACVhE,EACI3C,EAAAC,EAAAC,cAAA,uCAKRF,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,SAAP,KACIzB,EAAAC,EAAAC,cAACwH,GAAD,CAAOpG,KAAQW,KAAKL,MAAM6G,WAAYtH,MAASc,KAAKgH,oBAC/CS,GAEJ/G,UAnGeR,IAAMC,WA6HnBC,eAnBS,SAACT,GACrB,MAAM,CACFsD,KAAMtD,EAAMuD,cAAcpC,YAC1BoB,KAAMvC,EAAMuD,cAAchB,KAC1BwC,MAAO/E,EAAMuD,cAAcwB,MAC3B3F,OAA+B,OAAtBY,EAAMU,MAAMC,MACrBsH,UAAWjI,EAAMuD,cAAc0E,YAGZ,SAAC1B,GACxB,MAAM,CACFyB,eAAgB,SAACE,GAAD,OAAQ3B,EC9HH,SAAC2B,GAC1B,MAAO,CACHpH,KFLsB,iBEMtBqH,eAAgBD,GD2HiBE,CAAsBF,KACvDH,kBAAmB,SAACG,GAAD,OAAQ3B,ECxHH,SAAC2B,GAC7B,MAAO,CACHpH,KFXyB,oBEYzBqH,eAAgBD,GDqHoBE,CAAyBF,KAC7DN,eAAgB,kBAAIrB,ECpGjB,SAAAA,GACH1C,GAAMwE,IAAI,sBACTC,KAAK,SAAA3C,GACFY,EAhBF,CACFzF,KFjBwB,mBEkBxBK,YAc4BwE,EAAS4C,SAEnCC,MACEjC,EAZF,CACFzF,KFvB6B,8BCiI7ByG,UAAW,kBAAIhB,EE1GZ,CACHzF,KHnByB,uBC6HzBoG,UAAW,SAACR,GAAD,OAAOH,EAAS6B,GAAuB1B,OAI3CjG,CAA4CgI,GAAU7B,GAAc/C,yBGlHpE6E,GAjBS,SAACvK,GACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,KAAOV,iBACrBM,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,OAAK2E,MAAS,CAAC0F,MAAO,QAASC,OAAQ,QAASC,OAAQ,SACpDzK,EAAAC,EAAAC,cAACZ,EAAD,CAAQyD,YAAehD,EAAMgD,eAEjC/C,EAAAC,EAAAC,cAACrB,GAAD,CACAoG,WAAa,SACb9D,MAASpB,EAAM2K,gBAFf,UAGA1K,EAAAC,EAAAC,cAACrB,GAAD,CACAoG,WAAa,UACb9D,MAASpB,EAAM4K,kBAFf,+DCqCGC,GAlDD,SAAC7K,GACX,IAAI8K,EAAe,KACfC,EAAW,CAAC1K,KAAO/B,cAMvB,QAJI0B,EAAMgL,SAAWhL,EAAMiL,aAAejL,EAAMkL,OAC5CH,EAAS9B,KAAK5I,KAAO9B,SAGlByB,EAAMmL,aACT,IAAK,QACDL,EAAe7K,EAAAC,EAAAC,cAAA,QAAA2C,OAAAsI,OAAA,CACfhL,UAAa2K,EAASpJ,KAAK,MACvB3B,EAAMqL,cAFK,CAGfrE,MAAShH,EAAMgH,MACfsE,SAAYtL,EAAMuL,UAClB,MACJ,IAAK,WACDT,EAAe7K,EAAAC,EAAAC,cAAA,WAAA2C,OAAAsI,OAAA,CACfhL,UAAa2K,EAASpJ,KAAK,MACvB3B,EAFW,CAGfgH,MAAShH,EAAMgH,MACfsE,SAAYtL,EAAMuL,UAElB,MACJ,IAAK,SACDT,EACA7K,EAAAC,EAAAC,cAAA,UAASC,UAAa2K,EAASpJ,KAAK,KAAMqF,MAAShH,EAAMgH,MAAOsE,SAAYtL,EAAMuL,QACjFvL,EAAMqL,cAAcG,QAAQvI,IAAI,SAACwI,GAC9B,OAAOxL,EAAAC,EAAAC,cAAA,UAAQqD,IAAOiI,EAAOzE,MAAOA,MAASyE,EAAOzE,OAAQyE,EAAOC,iBAG3E,MACA,QACIZ,EAAe7K,EAAAC,EAAAC,cAAA,QAAA2C,OAAAsI,OAAA,CACfhL,UAAaC,KAAO/B,cAChB0B,EAFW,CAGfgH,MAAShH,EAAMgH,MACfsE,SAAYtL,EAAMuL,UAK1B,OACItL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOC,UAAaC,KAAOnC,OAAQ8B,EAAM2L,WACxCb,IChDAc,GAAgB,SAAC5E,EAAO6E,GACjC,IAAIb,GAAU,EAoBd,OAlBGa,EAAMC,UACLd,EAA2B,KAAjBhE,EAAM+E,QAAiBf,EAE9Ba,EAAMG,YACLhB,EAAUhE,EAAMnD,QAAUgI,EAAMG,WAAahB,GAG9Ca,EAAMI,YACLjB,EAAUhE,EAAMnD,QAAUgI,EAAMI,WAAajB,GAG9Ca,EAAMK,UACLlB,EAAU,eAAemB,KAAKnF,IAAUgE,IAI5CA,GAAU,EAEPA,GCVLpL,8MACFiC,MAAQ,CACJuK,UAAW,CACPrC,KAAM,CACNoB,YAAa,QACbE,cAAc,CACV1I,KAAO,OACP0J,YAAc,YACdtC,KAAO,QAEX/C,MAAO,GACPsF,WAAY,CACRR,UAAU,GAEdS,OAAO,EACPrB,OAAO,GAEPsB,MAAO,CACHrB,YAAa,QACbE,cAAc,CACV1I,KAAO,OACP0J,YAAc,aACdtC,KAAO,SAEX/C,MAAO,GACPsF,WAAY,CACRR,UAAU,GAEdS,OAAO,EACPrB,OAAO,GAEXuB,OAAO,CACHtB,YAAa,QACbE,cAAc,CACV1I,KAAO,OACP0J,YAAc,cACdtC,KAAO,UAEX/C,MAAO,GACPsF,WAAY,CACRR,UAAU,EACVE,UAAW,EACXC,UAAW,KAEfM,OAAO,EACPrB,OAAO,GAEXwB,SAAS,CACLvB,YAAa,SACbE,cAAc,CACVG,QAAS,CACL,CAACxE,MAAO,OAAQ0E,aAAc,QAC9B,CAAC1E,MAAO,QAAS0E,aAAc,WAGvC1E,MAAO,OACPuF,OAAO,EACPD,WAAW,KAGnBK,aAAa,EACbhE,SAAS,KAGbiE,iBAAmB,SAACC,EAAOC,GACvB,IAAMC,EAAWjK,OAAA4G,EAAA,EAAA5G,CAAA,GACVd,EAAKH,MAAMuK,WAGZY,EAAkBlK,OAAA4G,EAAA,EAAA5G,CAAA,GACjBd,EAAKH,MAAMuK,UAAUU,IAE5BE,EAAmBhG,MAAQ6F,EAAMI,OAAOjG,MACxCgG,EAAmBT,MAAQX,GAAcoB,EAAmBhG,MAAOgG,EAAmBV,YACtFU,EAAmB9B,OAAQ,EAE3B6B,EAAYD,GAAWE,EAEvB,IAAIE,GAAsB,EAC1B,IAAI,IAAIC,KAAaJ,EACjBG,EAAqBH,EAAYI,GAAWZ,OAASW,EAGzDlL,EAAKC,SAAS,CAACmK,UAAWW,EAAaJ,YAAaO,OAGxDE,cAAgB,SAACP,GACbA,EAAMQ,oBAGVC,aAAe,SAACT,GACZA,EAAMQ,iBAON,IAAIE,EAAW,GAEf,IAAI,IAAIC,KAAiBxL,EAAKH,MAAMuK,UAChCmB,EAASC,GAAiBxL,EAAKH,MAAMuK,UAAUoB,GAAexG,MAGlE,IAAMyG,EAAW,CACbzK,YAAchB,EAAKhC,MAAMmF,KACzBf,KAAMpC,EAAKhC,MAAMoE,KACjBsJ,UAAWH,EACXzF,OAAQ9F,EAAKhC,MAAM8H,QAGvB9F,EAAKhC,MAAM2N,kBAAkBF,EAAUzL,EAAKhC,MAAMwC,gFAG9C,IAAAyE,EAAA/E,KAEA0L,EAAY,GAEhB,IAAK,IAAIC,KAAU3L,KAAKL,MAAMuK,UAC1BwB,EAAU3E,KACN,CACI6E,GAAID,EACJE,OAAQ7L,KAAKL,MAAMuK,UAAUyB,KAKzC,IAAIG,EACJ/N,EAAAC,EAAAC,cAAA,QAAM8N,SAAY/L,KAAKoL,cACnBrN,EAAAC,EAAAC,cAAA,+BACCyN,EAAU3K,IAAI,SAACiL,GACZ,OACIjO,EAAAC,EAAAC,cAAC9B,GAAD,CACImF,IAAO0K,EAAYJ,GACnB3C,YAAe+C,EAAYH,OAAO5C,YAClCE,cAAiB6C,EAAYH,OAAO1C,cACpCrE,MAASkH,EAAYH,OAAO/G,MAC5BgE,QAAWkD,EAAYH,OAAOxB,MAC9BtB,YAAeiD,EAAYH,OAAOzB,WAClCpB,MAASgD,EAAYH,OAAO7C,MAC5BK,OAAU,SAACsB,GAAD,OAAU5F,EAAK2F,iBAAiBC,EAAOqB,EAAYJ,SAGzE7N,EAAAC,EAAAC,cAACrB,GAAD,CAAQoG,WAAa,UAAUlB,UAAa9B,KAAKL,MAAM8K,aAAvD,WAKJ,OAHGzK,KAAKlC,MAAM2I,UACVqF,EAAO/N,EAAAC,EAAAC,cAACqJ,GAAD,OAGXvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,KAAOT,aACxBoO,UAtJiB5L,IAAMC,WA2KjBC,eAhBS,SAACT,GACrB,MAAM,CACFsD,KAAMtD,EAAMuD,cAAcpC,YAC1BoB,KAAMvC,EAAMuD,cAAchB,KAC1BuE,QAAS9G,EAAMsM,MAAMxF,QACrBb,OAAQjG,EAAMU,MAAMuF,OACpBtF,MAAOX,EAAMU,MAAMC,QAIA,SAAC4F,GACxB,MAAM,CACFuF,kBAAmB,SAACF,EAASjL,GAAV,OAAkB4F,EJnJZ,SAACsF,EAAWlL,GACzC,OAAO,SAAA4F,GACPA,EAbO,CACHzF,KHdyB,sBG4B7B,IAAM4F,EAAM,qBAAuB/F,EACnCkD,GAAM0I,KAAK7F,EAAKmF,GACXvD,KAAK,SAAA3C,GACFY,EAlCF,CACFzF,KHA4B,uBGC5BmL,GAgCgCtG,EAAS4C,KAAKL,KA/B9C2D,UA+BoDA,EA9BpD9G,MAAO,SAgCNyD,MAAM,SAAAzD,GACHwB,EA7BmB,SAACxB,GAC5B,MAAM,CACFjE,KHRyB,oBGSzBiE,MAAOA,GA0BMyH,CAAgBzH,OIyIiB0H,CAA+Bb,EAASjL,OAI/EF,CAA4CgI,GAAU1K,GAAY8F,KChL3E6I,8MAEFC,eAAiB,WACbxM,EAAKhC,MAAMgJ,QAAQyF,YAGvBC,iBAAmB,WACf1M,EAAKhC,MAAMgJ,QAAQ2F,QAAQ,kGAI3B,IAAIC,EAAU3O,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAUlO,GAAK,MACzBmO,EAAoB5M,KAAKlC,MAAM+O,UAAY9O,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAUlO,GAAK,MAAQ,KAgBtE,OAdGuB,KAAKlC,MAAMmF,OACVyJ,EAAW3O,EAAAC,EAAAC,cAAA,WACV2O,EACD7O,EAAAC,EAAAC,cAACR,GAAD,CACIqD,YAAed,KAAKlC,MAAMmF,KAC1BwF,eAAkBzI,KAAKsM,eACvB5D,iBAAoB1I,KAAKwM,mBAC7BzO,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CACIG,KAAQ9M,KAAKlC,MAAMiP,MAAMD,KAAO,gBAChCE,UAAatP,OAKdgP,SA5BQxM,IAAMC,WAuCdC,eAPS,SAACT,GACrB,MAAM,CACFsD,KAAMtD,EAAMuD,cAAcpC,YAC1B+L,UAAWlN,EAAMsM,MAAMY,YAIhBzM,CAAyBiM,wBCvBzBJ,GAnBD,SAACnO,GACX,IAAMgD,EAAc,GAEpB,IAAI,IAAIgH,KAAkBhK,EAAMgD,YAC5BA,EAAYiG,KAAK,CAACc,KAAMC,EAAgBmF,IAAKnP,EAAMgD,YAAYgH,KAGnE,IAAMoF,EAAiBpM,EAAYC,IAAI,SAACoM,GACpC,OAAOpP,EAAAC,EAAAC,cAAA,QAAMqD,IAAO6L,EAAGtF,MAAhB,IAAwBsF,EAAGtF,KAA3B,KAAmCsF,EAAGF,IAAtC,QAGX,OACIlP,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,KAAOR,MAAO2D,IAAOxD,EAAM8N,IACzC7N,EAAAC,EAAAC,cAAA,iBAASiP,GACTnP,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,SAAIH,EAAMoE,SCT9BkL,+LAGCpN,KAAKlC,MAAMuP,kBAAkBrN,KAAKlC,MAAMwC,MAAON,KAAKlC,MAAM8H,yCAK7D,IAAI0H,EAASvP,EAAAC,EAAAC,cAACqJ,GAAD,MAgBb,OAdItH,KAAKlC,MAAM2I,UACf6G,EACCvP,EAAAC,EAAAC,cAAA,WACI+B,KAAKlC,MAAMwP,OAAOvM,IAAI,SAACkL,GAAD,OACnBlO,EAAAC,EAAAC,cAACN,GAAD,CACA2D,IAAO2K,EAAML,GACb9K,YAAemL,EAAMnL,YACrBoB,KAAQ+J,EAAM/J,WAOfoL,SAxBUpN,IAAMC,WA2CZC,eAfS,SAAAT,GACpB,MAAM,CACF8G,QAAS9G,EAAMsM,MAAMxF,QACrB6G,OAAQ3N,EAAMsM,MAAMqB,OACpBhN,MAAOX,EAAMU,MAAMC,MACnBsF,OAAQjG,EAAMU,MAAMuF,SAID,SAAAM,GACvB,MAAM,CACFmH,kBAAmB,SAAC/M,EAAMsF,GAAP,OAAgBM,EPmBV,SAAC5F,EAAMsF,GACpC,OAAO,SAAAM,GACPA,EAPO,CACHzF,KHjDyB,sBGwD7B,IAAM4F,EAAM,qBAAuB/F,EAAQ,8BAAgCsF,EAAS,MACpFpC,GAAMwE,IAAI3B,GACT4B,KAAK,SAAC1C,GACH,IAAMgI,EAAe,GACrB,IAAI,IAAIjM,KAAOiE,EAAI2C,KACfqF,EAAaxG,KAAbnG,OAAA4G,EAAA,EAAA5G,CAAA,GACO2E,EAAI2C,KAAK5G,GADhB,CAEIsK,GAAItK,KAGZ4E,EAhCE,CACFzF,KHrC4B,uBGsC5B+M,cA8B4BD,MAC7BpF,MAAM,SAAAzD,GACLwB,EA5BuB,SAACxB,GAC5B,MAAO,CACHjE,KH3CyB,oBG4CzBiE,MAAOA,GAyBE+I,CAAgB/I,OOlCmBqD,CAA0BzH,EAAMsF,OAIrExF,CAA4CgI,GAAUgF,GAAQ5J,kCCzCvE5F,8MACF+B,MAAQ,CACJ+N,OAAQ,CACJpD,MAAO,CACPrB,YAAa,QACbE,cAAc,CACV1I,KAAO,OACP0J,YAAc,QACdtC,KAAO,UAEX/C,MAAO,GACPsF,WAAY,CACRR,UAAU,EACVI,SAAS,GAEbK,OAAO,EACPrB,OAAO,GAEP2E,SAAU,CACN1E,YAAa,QACbE,cAAc,CACV1I,KAAO,WACP0J,YAAc,WACdtC,KAAO,YAEX/C,MAAO,GACPsF,WAAY,CACRR,UAAU,EACVE,UAAW,GAEfO,OAAO,EACPrB,OAAO,IAGf4E,UAAU,KASdlD,iBAAmB,SAACC,EAAOkD,GAEvB,IAAMC,EAAalN,OAAA4G,EAAA,EAAA5G,CAAA,GACZd,EAAKH,MAAM+N,OADC9M,OAAAmN,GAAA,EAAAnN,CAAA,GAEdiN,EAFcjN,OAAA4G,EAAA,EAAA5G,CAAA,GAGRd,EAAKH,MAAM+N,OAAOG,GAHV,CAIX/I,MAAO6F,EAAMI,OAAOjG,MACpBuF,MAAOX,GAAciB,EAAMI,OAAOjG,MAAQhF,EAAKH,MAAM+N,OAAOG,GAAazD,YACzEpB,OAAO,MAIflJ,EAAKC,SAAS,CACV2N,OAAQI,OAIhBE,iBAAmB,SAACrD,GAChBA,EAAMQ,iBACNrL,EAAKhC,MAAMmQ,YAAYnO,EAAKH,MAAM+N,OAAOpD,MAAMxF,MAAMhF,EAAKH,MAAM+N,OAAOC,SAAS7I,MAAMhF,EAAKH,MAAMiO,aAGrGM,aAAe,WACXpO,EAAKC,SAAS,SAAAoO,GACV,MAAM,CACFP,UAAYO,EAAUP,gGA9BzB5N,KAAKlC,MAAM8J,WAAwC,MAA3B5H,KAAKlC,MAAMsQ,aACpCpO,KAAKlC,MAAMsQ,+CAkCX,IAAArJ,EAAA/E,KACA0L,EAAY,GAEhB,IAAK,IAAIC,KAAU3L,KAAKL,MAAM+N,OAC1BhC,EAAU3E,KACN,CACI6E,GAAID,EACJE,OAAQ7L,KAAKL,MAAM+N,OAAO/B,KAKtC,IAAIG,EAAOJ,EAAU3K,IACjB,SAACiL,GACG,OACIjO,EAAAC,EAAAC,cAAC9B,GAAD,CACImF,IAAO0K,EAAYJ,GACnB3C,YAAe+C,EAAYH,OAAO5C,YAClCE,cAAiB6C,EAAYH,OAAO1C,cACpCrE,MAASkH,EAAYH,OAAO/G,MAC5BgE,QAAWkD,EAAYH,OAAOxB,MAC9BtB,YAAeiD,EAAYH,OAAOzB,WAClCpB,MAASgD,EAAYH,OAAO7C,MAC5BK,OAAU,SAACsB,GAAD,OAAU5F,EAAK2F,iBAAiBC,EAAOqB,EAAYJ,SAKzEyC,EAAYrO,KAAKL,MAAMiO,SAAW,QAAW,WAE7CU,EAAa,KAGbA,EADDtO,KAAKlC,MAAM2I,QACG1I,EAAAC,EAAAC,cAACqJ,GAAD,MAECvJ,EAAAC,EAAAC,cAACsQ,EAAA,SAAD,KACVxQ,EAAAC,EAAAC,cAAA,UAAK+B,KAAKL,MAAMiO,SAAW,oBAAsB,SACjD7P,EAAAC,EAAAC,cAAA,YACK6N,EACD/N,EAAAC,EAAAC,cAACrB,GAAD,CACAoG,WAAa,UACb9D,MAASc,KAAKgO,kBAFd,YAMJjQ,EAAAC,EAAAC,cAACrB,GAAD,CACCoG,WAAa,SACb9D,MAASc,KAAKkO,cAFf,cAGaG,IAKrB,IAAIG,EAAc,KACfxO,KAAKlC,MAAM4G,QACV8J,EAAczQ,EAAAC,EAAAC,cAAA,SAAI+B,KAAKlC,MAAM4G,QAGjC,IAAI+J,EAAe,KAInB,OAHGzO,KAAKlC,MAAMiB,SACV0P,EAAe1Q,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAUlO,GAAMuB,KAAKlC,MAAMwI,eAEtCvI,EAAAC,EAAAC,cAAA,OAAKC,UAAawQ,KAAO9Q,aAC7B6Q,EACAD,EACAF,UA1IcnO,aAgKXC,eAjBS,SAAAT,GACpB,MAAO,CACH8G,QAAS9G,EAAMU,MAAMsO,KACrBjK,MAAO/E,EAAMU,MAAMqE,MACnB3F,OAA8B,OAAtBY,EAAMU,MAAMC,MACpBgG,YAAa3G,EAAMU,MAAMiG,YACzBsB,UAAWjI,EAAMuD,cAAc0E,YAIZ,SAAA1B,GACvB,MAAM,CACF+H,YAAc,SAAC3D,EAAMqD,EAASiB,GAAhB,OAA6B1I,EZtHxB,SAACoE,EAAMqD,EAAUiB,GACxC,OAAO,SAAA1I,GACHA,EA7CE,CACFzF,KCUmB,gBDmCnB,IAAMoL,EAAS,CACXvB,MAAOA,EACPqD,SAAUA,EACVkB,mBAAmB,GAGnBxI,EAAM,KAGNA,EADDuI,EACO,uHAEA,wHAEVpL,KAAM0I,KAAK7F,EAAIwF,GACd5D,KACG,SAAA3C,GACI,IAAMW,EAAa,IAAI6I,MAAK,IAAIA,MAAOC,UAAuC,IAA1BzJ,EAAS4C,KAAK8G,WAClElJ,aAAamJ,QAAQ,QAAQ3J,EAAS4C,KAAKgH,SAC3CpJ,aAAamJ,QAAQ,iBAAiBhJ,GACtCH,aAAamJ,QAAQ,SAAS3J,EAAS4C,KAAKiH,SAC5CjJ,EAASP,GAAaL,EAAS4C,KAAKgH,QAAS5J,EAAS4C,KAAKiH,UAC3DjJ,EAASF,GAAkBV,EAAS4C,KAAK8G,cAGhD7G,MACG,SAAAiH,GACIlJ,EAlEN,CACFzF,KCMkB,aDLlBiE,MAgE2B0K,EAAI9J,SAAS4C,KAAKxD,MAAMgB,aYyFCqC,CAAoBuC,EAAMqD,EAAUiB,KACxFR,YAAc,kBAAIlI,EAAS6B,GAAuB,SAI3C3H,CAA4CxC,ICrKrDyR,+LAEErP,KAAKlC,MAAMwR,8CAIX,OAAOvR,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAUlO,GAAK,aANT0B,aAgBNC,eAAQ,KANI,SAAA8F,GACvB,MAAO,CACJoJ,WAAa,kBAAIpJ,EAAS6B,SAIlB3H,CAAiCiP,ICV1CE,+LAEFvP,KAAKlC,MAAM0R,oDAKX,IAAIC,EACF1R,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,KACE5O,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOG,KAAO,IAAInO,OAAK,EAACqO,UAAazG,KACrCxI,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOG,KAAO,SAASE,UAAapP,KACpCG,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAUlO,GAAK,OAiBnB,OAbGuB,KAAKlC,MAAMiB,SACZ0Q,EACE1R,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,KACE5O,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOG,KAAO,SAASE,UAAapP,KACpCG,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOG,KAAO,YAAYE,UAAaX,KACvCtO,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOG,KAAO,UAAUE,UAAaI,KACrCrP,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOG,KAAO,UAAUE,UAAaqC,KACrCtR,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOG,KAAO,IAAInO,OAAK,EAACqO,UAAazG,KACrCxI,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAUlO,GAAK,QAMnBV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyR,EAAD,KACGD,WA/BOtP,aAkDHwP,gBAAWvP,YAZF,SAAAT,GACtB,MAAM,CACJZ,OAA8B,OAAtBY,EAAMU,MAAMC,QAIG,SAAC4F,GAC1B,MAAO,CACLsJ,iBAAmB,kBAAMtJ,Ed0BlB,SAAAA,GACH,IAAM5F,EAAQwF,aAAa8J,QAAQ,SAC7BhK,EAASE,aAAa8J,QAAQ,UAEpC,GAAItP,EAEA,CACA,IAAMuP,EAAiB,IAAIf,KAAKhJ,aAAa8J,QAAQ,mBAClDC,EAAiB,IAAIf,MACpB5I,EAASP,GAAarF,EAAMsF,IAC5BM,EAASF,IAAmB6J,EAAed,WAAY,IAAID,MAAOC,WAAW,OAG7E7I,EAASL,WARbK,EAASL,Wc3BKzF,CAA4CmP,KCjDlDO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlD,MACvB,wEClBOmD,GAAe,SAACC,EAAWC,GACpC,OAAAxP,OAAA4G,EAAA,EAAA5G,CAAA,GACGuP,EACAC,ICADC,GAAe,CACjBvP,YAAa,GACboB,KAAM,EACNwC,MAAO,KACPkD,WAAW,GAGT0I,GAAmB,CACrBC,MAAO,GACPC,MAAO,EACPC,OAAQ,GACRC,KAAM,GA8CKC,GAnBC,WAA+B,IAA9BhR,EAA8BwE,UAAAxC,OAAA,QAAAiP,IAAAzM,UAAA,GAAAA,UAAA,GAAtBkM,GAAaQ,EAAS1M,UAAAxC,OAAA,EAAAwC,UAAA,QAAAyM,EAC3C,OAAOC,EAAOpQ,MACV,IhB3CsB,iBgB4CtB,OA3Bc,SAACd,EAAMkR,GACzB,IAAMC,EAAoBlQ,OAAAmN,GAAA,EAAAnN,CAAA,GAAMiQ,EAAO/I,eAAiBnI,EAAMmB,YAAY+P,EAAO/I,gBAAkB,GAQnG,MANwB,CACpBhH,YAF0BoP,GAAavQ,EAAMmB,YAAagQ,GAG1D5O,KAAMvC,EAAMuC,KAAOoO,GAAiBO,EAAO/I,gBAC3CF,WAAW,GAqBJmJ,CAAcpR,EAAMkR,GAE3B,IhB7CyB,oBgB8CzB,OAlBgB,SAAClR,EAAMkR,GAC3B,IAAMG,EAAoBpQ,OAAAmN,GAAA,EAAAnN,CAAA,GAAMiQ,EAAO/I,eAAiBnI,EAAMmB,YAAY+P,EAAO/I,gBAAkB,GAQnG,MAN6B,CACjBhH,YAF0BoP,GAAavQ,EAAMmB,YAAakQ,GAG1D9O,KAAMvC,EAAMuC,KAAOoO,GAAiBO,EAAO/I,gBAC3CF,WAAW,GAYZqJ,CAAiBtR,EAAMkR,GAE9B,IhB/CwB,mBgBgDxB,OAAOX,GAAavQ,EAAM,CAAEuC,KAAM,EAAEpB,YAAY+P,EAAO/P,YAAa4D,OAAO,EAAOkD,WAAW,IAE7F,IhBjD6B,wBgBkD7B,OAAOsI,GAAavQ,EAAM,CAAC+E,OAAO,IAElC,QACI,OAAO/E,ICrDb0Q,GAAe,CACjB5J,SAAS,EACT6G,OAAQ,GACRT,WAAW,EACXnI,MAAO,MA4CIiM,GAzCC,WAAgC,IAA/BhR,EAA+BwE,UAAAxC,OAAA,QAAAiP,IAAAzM,UAAA,GAAAA,UAAA,GAAvBkM,GAAcQ,EAAS1M,UAAAxC,OAAA,EAAAwC,UAAA,QAAAyM,EAC5C,OAAOC,EAAOpQ,MACV,IjBP4B,uBiBS5B,IAAMyQ,EAAQtQ,OAAA4G,EAAA,EAAA5G,CAAA,GACPiQ,EAAOrF,UADA,CAEVI,GAAIiF,EAAOjF,KAGf,OAAOsE,GAAavQ,EAChB,CAAC2N,OAAQ3N,EAAM2N,OAAO5L,OAAOwP,GAC7BzK,SAAS,EACToG,WAAW,IAGf,IjBnByB,oBiBoBzB,OAAOqD,GAAavQ,EAAM,CACtB+E,MAAOmM,EAAOnM,MACd+B,SAAS,IAGb,IjBxByB,oBiByBzB,OAAOyJ,GAAavQ,EAAM,CAAC8G,SAAS,IAEpC,IjB1ByB,oBiB2BzB,OAAOyJ,GAAavQ,EAAM,CAACkN,WAAW,IAEtC,IjBxByB,oBiByBzB,OAAOqD,GAAavQ,EAAM,CAAC8G,SAAS,IAEpC,IjB5ByB,oBiB6BzB,OAAOyJ,GAAavQ,EAAM,CAAC8G,SAAS,EAAO/B,MAAOmM,EAAOnM,QAEzD,IjBhC4B,uBiBiC5B,OAAOwL,GAAavQ,EAAM,CAAC2N,OAAQuD,EAAOrD,cAAe/G,SAAS,IAElE,QACI,OAAO9G,IC5Cb0Q,GAAe,CACjB/P,MAAO,KACPsF,OAAQ,KACRlB,MAAO,KACPiK,MAAM,EACNrI,YAAa,KA8BFqK,GA3BC,WAAgC,IAA/BhR,EAA+BwE,UAAAxC,OAAA,QAAAiP,IAAAzM,UAAA,GAAAA,UAAA,GAAvBkM,GAAcQ,EAAS1M,UAAAxC,OAAA,EAAAwC,UAAA,QAAAyM,EAC5C,OAAOC,EAAOpQ,MACV,IlBGqB,gBkBFjB,OAAOyP,GAAavQ,EAAM,CACtBW,MAAOuQ,EAAOvQ,MACdsF,OAAQiL,EAAOjL,OACf+I,MAAM,EACNjK,MAAO,OAGf,IlBNmB,ckBOf,OAAOwL,GAAavQ,EAAM,CAACgP,MAAM,EAAMjK,MAAO,OAElD,IlBPkB,akBQd,OAAOwL,GAAavQ,EAAM,CAAC+E,MAAOmM,EAAOnM,MAAOiK,MAAM,IAE1D,IlBToB,ekBUhB,OAAOuB,GAAavQ,EAAM,CAACiG,OAAQ,KAAMtF,MAAO,OAEpD,IlBrBuB,kBkBsBnB,OAAO4P,GAAavQ,EAAM,CAAC2G,YAAauK,EAAOvK,cAEnD,QAAS,OAAO3G,aCnBlBwR,GAAmBpB,OAAOqB,sCAAwCC,KAElEC,GAAcC,aAChB,CACIrO,cAAesO,GACfvF,MAAOwF,GACPpR,MAAOqR,KAITC,GAAQC,aAAYN,GAAYH,GAClCU,aAAgBC,QAGpBC,IAASC,OAAOjU,EAAAC,EAAAC,cAACgU,EAAA,EAAD,CAAUN,MAASA,IAAO5T,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAe0T,SAAUC,cAC/DpU,EAAAC,EAAAC,cAACmU,GAAD,QAAoCC,SAASC,eAAe,SLoG1D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxK,KAAK,SAAAyK,GACjCA,EAAaC","file":"static/js/main.ae8984ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2wa__\",\"BreadTop\":\"BurgerIngredient_BreadTop__1Y7Kl\",\"Seeds1\":\"BurgerIngredient_Seeds1__2Wk5b\",\"Seeds2\":\"BurgerIngredient_Seeds2__t6qUZ\",\"Meat\":\"BurgerIngredient_Meat__2rhmz\",\"Cheese\":\"BurgerIngredient_Cheese__2q9M_\",\"Salad\":\"BurgerIngredient_Salad__UyLen\",\"Bacon\":\"BurgerIngredient_Bacon__18eBS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__e8GC1\",\"Logo\":\"SideDrawer_Logo__12Axb\",\"Open\":\"SideDrawer_Open__3BUZq\",\"Close\":\"SideDrawer_Close__2levY\",\"DesktopOnly\":\"SideDrawer_DesktopOnly___zefZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__cyTwH\",\"Label\":\"BuildControl_Label__3KSF3\",\"Less\":\"BuildControl_Less__Z6Otl\",\"More\":\"BuildControl_More__8eZvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__nOY0w\",\"Label\":\"Input_Label__2w3Ua\",\"InputElement\":\"Input_InputElement__2ea4w\",\"Invalid\":\"Input_Invalid__1qjz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__Sf-lr\",\"Logo\":\"Toolbar_Logo__22ZyB\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2vOpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__30MYa\",\"active\":\"NavigationItem_active__1e4Hq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2gXzu\",\"OrderButton\":\"BuildControls_OrderButton__2YM4L\",\"enable\":\"BuildControls_enable__2YGQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3V3oe\",\"Success\":\"Button_Success__3fJ1i\",\"Danger\":\"Button_Danger__2N2hn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3-fyv\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1oYuo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__h3Fu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__j3KHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3eUCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1VTcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1zzZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2dzEN\",\"load4\":\"Spinner_load4__3a9rT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__14bN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2Byrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__36fpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginScreen\":\"LoginScreen_LoginScreen__30Xnd\"};","import React from 'react';\nimport logoImg from '../../assets/burger-logo.png'\nimport styles from './Logo.module.css'\n\nconst logo = (props) =>{\n    return(\n    <div className = {styles.Logo}>\n        <img alt = 'logo' src = {logoImg} ></img>\n    </div>\n    )\n}\n\nexport default logo;","import React from 'react';\nimport styles from './NavigationItem.module.css'\nimport {NavLink} from 'react-router-dom';\n\nconst navigationItem = (props) =>{\n    return (\n            <li className = {styles.NavigationItem}>\n                <NavLink \n                    to = {props.link} exact\n                    activeClassName = {styles.active}>\n                    {props.children}</NavLink>\n            </li>\n    );\n}\n\nexport default navigationItem;","import React from 'react';\nimport styles from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) =>{\n    return (\n        <ul className = {styles.NavigationItems} >\n                <NavigationItem link = '/' active = {true} >Burger</NavigationItem>\n            {props.isAuth ? <NavigationItem link = '/orders'>Orders</NavigationItem> : null }\n            {!props.isAuth \n                ? <NavigationItem link = '/login'>Login</NavigationItem>\n                : <NavigationItem link = '/logout'>Logout</NavigationItem>}\n        </ul>\n    );\n}\n\nexport default navigationItems;","import React from 'react';\nimport styles from './Menu.module.css'\n\nconst menu = (props)=>{\n    return (\n        <div className = {styles.Menu} onClick = {props.click}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default menu;","import React from 'react';\nimport styles from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Menu from '../Menu/Menu';\n\nconst toolbar = (props)=>(\n    <header className = {styles.Toolbar}>\n        <Menu click = {props.click}/>\n        <div className = {styles.Logo}>\n            <Logo/>\n        </div>\n        <nav className = {styles.DesktopOnly}>\n            <NavigationItems isAuth = {props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react';\nimport styles from './Backdrop.module.css';\n\nconst backdrop = (props)=>{\n    return props.show ? <div onClick = {props.click} className = {styles.Backdrop}></div> : null;\n}\n\nexport default backdrop;","import React from 'react';\nimport styles from './SideDrawer.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nconst sideDrawer = (props) => {\n\n    let currentClasses = [styles.SideDrawer, styles.Close]; \n    \n    if(props.show)\n        currentClasses = [styles.SideDrawer, styles.Open];  \n\n    return (\n        <React.Fragment>\n        <div className = {currentClasses.join(' ')} onClick = {props.click}>\n            <div className = {styles.Logo}>\n                <Logo/>\n            </div>\n            <nav>\n                <NavigationItems isAuth = {props.isAuth}/>\n            </nav>\n        </div>\n        <Backdrop click = {props.click} show = {props.show}/>\n        </React.Fragment>       \n    );\n\n}\n\nexport default sideDrawer;","import React from 'react';\nimport {connect} from 'react-redux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends React.Component{ \n   \n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerHandler = ()=>{\n        this.setState({showSideDrawer : !this.state.showSideDrawer});\n    }\n\n    render(){\n\n    return (\n        <React.Fragment>\n            <Toolbar \n            click = {this.sideDrawerHandler}\n            isAuth = {this.props.isAuth}/>\n            <SideDrawer \n            isAuth = {this.props.isAuth}\n            show = {this.state.showSideDrawer} \n            click = {this.sideDrawerHandler}/>\n            <main className = {classes.Content}>\n                {this.props.children}\n            </main>\n        </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state =>{   \n    return {\n        isAuth: state.login.token != null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport classes from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n    let ingridient = null;\n    \n    switch (props.type) {\n        case ('bread-bottom'):\n            ingridient = <div className = {classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingridient = (\n                <div className = {classes.BreadTop}>\n                    <div className = {classes.Seeds1}></div>\n                    <div className = {classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case('meat'):\n               ingridient = <div className = {classes.Meat}></div>;\n                break;\n        case('cheese'):\n            ingridient = <div className = {classes.Cheese}></div>;\n                break;\n        case('salad'):\n            ingridient = <div className = {classes.Salad}></div>;\n                break;\n        case('bacon'):\n            ingridient = <div className = {classes.Bacon}></div>;\n                break;\n        default:\n            ingridient = null;\n            break;\n    }\n\n    return ingridient;\n};\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) =>{\n\n    let transformedIngredients = Object.keys(props.ingredients).map(\n        igKey =>{\n                return [...Array(props.ingredients[igKey])]\n                .map((_,index) =>{\n                    return <BurgerIngredient key = {igKey + index} type = {igKey} />\n                })\n            }).reduce((arr,el)=>{\n                return arr.concat(el)\n            },[]);\n    \n    if(transformedIngredients.length === 0){\n        transformedIngredients = <div>No ingredients, add some!</div>;\n    }\n            \n    return(\n        <div className = {classes.Burger}>\n            <BurgerIngredient type = 'bread-top' />\n                {transformedIngredients}\n            <BurgerIngredient type = 'bread-bottom' />\n        </div>\n    );\n}\n\nexport default burger;","import styles from './BuildControl.module.css'\nimport React from 'react';\n\nconst buildControl= (props) => {\n    return(\n        <div className = {styles.BuildControl}>\n            <div className = {styles.Label}>{props.label}</div>\n            <button disabled = {props.disabled} className = {styles.Less} onClick = {props.removeFunc}>Less</button>\n            <button className = {styles.More} onClick = {props.addFunc}>More</button>\n        </div>\n    );\n};\n\nexport default buildControl;","import styles from './BuildControls.module.css';\nimport BuildControl from  './BuildControl/BuildControl';\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nconst buildControls= (props) => {\n    const controls = [\n        {label: 'Salad', type: 'salad'},\n        {label: 'Bacon', type: 'bacon'},\n        {label: 'Cheese', type: 'cheese'},\n        {label: 'Meat', type: 'meat'}\n    ];\n\n    return(\n        <div className = {styles.BuildControls}>\n            <p>Current cost: <b>{Number(props.cost).toFixed(2)}</b></p>\n            {controls.map(ctrl => (\n                <BuildControl \n                    removeFunc = {()=>props.removeHandler(ctrl.type)} \n                    addFunc = {()=>props.addHandler(ctrl.type)} \n                    key = {ctrl.label} label = {ctrl.label}\n                    disabled = {props.disabledInfo[ctrl.type]}/>\n                )\n            )}\n            <button \n                onClick = {props.wasOrdererClick}\n                className = {styles.OrderButton} \n                disabled = {props.orderBlocked}>{props.isAuth ? 'ORDER': 'GO TO LOGIN SCREEN'} </button>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state)=>{\n    return{\n        isAuth: state.login.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(buildControls);","import React from 'react';\nimport styles from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends React.Component {\n\n    shouldComponentUpdate(nextProps,nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return ( \n            <React.Fragment >\n            <Backdrop \n            show = {this.props.show}\n            click = {\n                this.props.click\n            }\n            /> \n            <div className = {styles.Modal}\n            style = {{transform: this.props.show ? 'translateY(0)' : 'translateY(-100)',\n                    opacity: this.props.show ? '1' : '0'}} >\n                {this.props.children} \n            </div> \n            </React.Fragment>\n        );\n    }\n};\n\nexport default Modal;","import React from 'react';\nimport styles from './Button.module.css'\n\nconst button = (props) => {\n    return <button\n        disabled = {props.disabled}\n        className = {[styles.Button, styles[props.buttonType]].join(' ')}\n        onClick = {props.click}>\n        {props.children}\n    </button>\n}\n\nexport default button;","import React from 'react';\nimport Button from '../../UI/Button/Button'\nimport {connect} from 'react-redux';\n\nconst orderSummary = (props)=>{\n    \n    let listOfOrder = null\n    if(props.ingr){\n    listOfOrder = Object.keys(props.ingredients)\n    .map((ingredientsKey)=>{\n        return (<li key = {ingredientsKey}>{ingredientsKey} : {props.ingredients[ingredientsKey]}</li>);\n    }\n    )\n    }\n\n    return(\n        <div>\n            <h1>Your order:</h1>\n            <ul>\n                {listOfOrder}\n            </ul>\n            <p>Cost: {props.cost}</p>\n            <Button \n            buttonType = 'Danger' \n            click ={props.cancelClick} >Cancel</Button>\n            <Button \n            click = {props.checkoutClick} \n            buttonType = 'Success'>Continue</Button>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state)=>{\n    return{\n        ingr: state.burgerBuilder.ingredients,\n    }\n}\n\nexport default connect(mapStateToProps)(orderSummary);","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burgerapp-59617.firebaseio.com/'\n})\n\nexport default instance;","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst loader = (props)=>{\n        return (\n            <div className={styles.Loader}>Loading</div>\n        );\n}\n\nexport default loader;","import React from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\n\n\nconst withError = (WrappedCopoment,axios)=>{\n    return class extends React.Component {\n\n        state = {\n            error: null\n        }\n\n        componentDidMount(){\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n\n                return req;\n            })\n\n            this.resInterceptor = axios.interceptors.response.use(res => res,error => {\n                this.setState({error: error})\n            });\n        }\n\n        copomentWillUnmount(){  \n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        confirmError = ()=>{\n            this.setState({error: null})\n        }\n\n        render(){\n            return(\n                <React.Fragment>\n                    <Modal \n                    show = {this.state.error}\n                    click = {this.confirmError}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedCopoment {...this.props}/>\n                </React.Fragment>\n            );\n        }\n    }\n\n}\n\nexport default withError","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginStart = ()=>{\r\n    return{\r\n        type: actionTypes.LOGIN_START\r\n    }\r\n}\r\n\r\nexport const loginFail = (error)=>{\r\n    return{\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (token, userId)=>{\r\n    return{\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const logOut = ()=>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n\r\n    return{\r\n        type: actionTypes.LOGIN_LOGOUT\r\n    }\r\n}\r\n\r\nexport const handleTokenExpire = (expireTime)=>{\r\n    return dispatch =>{\r\n        setTimeout(()=> dispatch(logOut()) , expireTime * 1000);\r\n    }\r\n}\r\n\r\nexport const changeRedirect = (url)=>{\r\n    return{\r\n        type: actionTypes.REDIRECT_CHANGE,\r\n        urlRedirect : url\r\n    }\r\n}\r\n\r\nexport const loginHandle = (email,password, isRegister)=>{\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        const config = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = null\r\n        \r\n        if(isRegister)\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + process.env.REACT_APP_FIREBASE_KEY;\r\n        else\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + process.env.REACT_APP_FIREBASE_KEY;\r\n\r\n        axios.post(url,config)\r\n        .then(\r\n            response => {\r\n                const expireTime = new Date(new Date().getTime() + (response.data.expiresIn * 1000));  \r\n                localStorage.setItem('token',response.data.idToken);\r\n                localStorage.setItem('expirationDate',expireTime);\r\n                localStorage.setItem('userId',response.data.localId);\r\n                dispatch(loginSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(handleTokenExpire(response.data.expiresIn));\r\n            }\r\n        )\r\n        .catch(\r\n            err => {\r\n                dispatch(loginFail(err.response.data.error.message));\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const checkLoginStatus = ()=>{\r\n    return dispatch =>{\r\n        const token = localStorage.getItem('token');\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        if(!token)\r\n            dispatch(logOut());\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate > new Date()){\r\n                dispatch(loginSuccess(token,userId));\r\n                dispatch(handleTokenExpire((expirationDate.getTime() - new Date().getTime())/100));\r\n            }\r\n            else\r\n                dispatch(logOut());\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const INIT_INGRIDIENTS = 'INIT_INGRIDIENTS';\r\nexport const INIT_INGRIDIENTS_FAIL = 'INIT_INGRIDIENTS_FAIL';\r\n\r\nexport const BURGER_ORDER_SUCCESS = 'BURGER_ORDER_SUCCESS';\r\nexport const BURGER_ORDER_FAIL = 'BURGER_ORDER_FAIL';\r\nexport const BURGER_ORDER_LOAD = 'BURGER_ORDER_LOAD';\r\nexport const BURGER_ORDER_INIT = 'BURGER_ORDER_INIT';\r\nexport const REDIRECT_CHANGE = 'REDIRECT_CHANGE';\r\n\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const FETCH_ORDERS_LOAD = 'FETCH_ORDERS_LOAD';\r\n\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGIN_LOGOUT = \"LOGIN_LOGOUT\";","import React from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport WithError from '../../hoc/WithError/WithError';\n\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index'; \n\nclass BurgerBuilder extends React.Component{\n\n    state = {\n        orderBlocked: true,\n        wasOrdered: false,\n        loading: false\n    };\n  \n    componentDidMount (){\n        this.props.ingredientInit();\n    }\n\n    possibleOrderHandler = (ingredients)=>{\n        let sum = Object.keys(ingredients).map((igKey)=>{\n            return ingredients[igKey];\n        }).reduce((sum,el)=>{\n            return sum + el;\n        },0)\n        \n        let orderBlocked = sum <=0;\n        return orderBlocked;\n    }\n\n    wasOrderedHandler = ()=>{\n        \n        if(this.props.isAuth)\n            this.setState({wasOrdered: true});\n        else{\n            this.props.changeURL('/checkout');\n            this.props.history.push('/login');\n        }\n    };\n    \n    cancelOrderHandler = () => {\n        this.setState({wasOrdered: !this.state.wasOrdered})\n    };\n\n    checkoutHandler = () =>{\n        this.props.orderInit();\n        this.props.history.push('/checkout'); \n    };\n\n    handleLoading = () =>{\n        \n        let modal =<OrderSummary \n        checkoutClick = {this.checkoutHandler} \n        cost = {this.props.cost} \n        cancelClick = {this.cancelOrderHandler} \n        ingredients = {this.props.ingr}\n        />\n\n        if(this.state.loading)\n            modal = <Spinner/>\n        \n        return modal;\n\n        \n    }\n\n    render(){\n        let disabledInfo = {\n            ...this.props.ingr\n        };\n\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        let currentModal = this.handleLoading(); \n\n        let burger = null;\n        if(this.props.ingr){\n            burger = (\n            <React.Fragment>\n                <Burger ingredients = {this.props.ingr}/>\n                <BuildControls \n                    removeHandler = {this.props.onIgredientDelete} \n                    addHandler = {this.props.onIgredientAdd}\n                    disabledInfo = {disabledInfo}\n                    cost = {this.props.cost}\n                    orderBlocked = {this.possibleOrderHandler(this.props.ingr)}\n                    wasOrdererClick = {this.wasOrderedHandler}/>\n            </React.Fragment>\n            );\n        }else{\n            burger = <Spinner/>\n        }\n\n        if(this.props.error){\n            burger = (\n                <div>Burger can't be loaded!</div>\n            )\n        }\n\n        return(\n        <React.Fragment>\n            <Modal show = {this.state.wasOrdered} click = {this.cancelOrderHandler}>\n                {currentModal}\n            </Modal>\n            {burger}\n        </React.Fragment>\n        );\n    };\n}\n\n\nconst mapStateToProps = (state)=>{\n    return{\n        ingr: state.burgerBuilder.ingredients,\n        cost: state.burgerBuilder.cost,\n        error: state.burgerBuilder.error,\n        isAuth : state.login.token !== null,\n        isBuilded: state.burgerBuilder.isBuilded\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        onIgredientAdd: (name)=>dispatch(actions.addIngredient(name)),\n        onIgredientDelete: (name)=>dispatch(actions.removeIngredient(name)),\n        ingredientInit: ()=>dispatch(actions.initIngredients()),\n        orderInit: ()=>dispatch(actions.bugerOrderInit()),\n        changeURL: (url)=>dispatch(actions.changeRedirect(url))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WithError(BurgerBuilder,axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name)=>{\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name)=>{\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (initIngredients)=>{\r\n    return{\r\n        type: actionTypes.INIT_INGRIDIENTS,\r\n        ingredients: initIngredients\r\n    }\r\n}\r\n\r\nexport const setIngredientsImportFail = ()=>{\r\n    return{\r\n        type: actionTypes.INIT_INGRIDIENTS_FAIL\r\n    }\r\n}\r\n\r\nexport const initIngredients = ()=>{\r\n    return dispatch =>{\r\n        axios.get('/ingredients.json/')\r\n        .then(response =>{\r\n            dispatch(setIngredients(response.data));\r\n        }\r\n        ).catch(\r\n            dispatch(setIngredientsImportFail())\r\n        )\r\n    }\r\n}\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const burgerOrderSuccess = (orderId, postData)=>{\r\n    return{\r\n        type: actionTypes.BURGER_ORDER_SUCCESS,\r\n        id: orderId,\r\n        orderData: postData,\r\n        error: null\r\n    }\r\n}\r\n\r\nexport const burgerOrderFail = (error)=>{\r\n    return{\r\n        type: actionTypes.BURGER_ORDER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const burgerOrderLoading = ()=>{\r\n    return {\r\n        type: actionTypes.BURGER_ORDER_LOAD\r\n    }\r\n}\r\n\r\nexport const bugerOrderInit = ()=>{\r\n    return {\r\n        type: actionTypes.BURGER_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const handleBurgerOrder = (orderData, token)=>{\r\n    return dispatch =>{\r\n    dispatch(burgerOrderLoading());\r\n\r\n    const url = '/orders.json?auth=' + token;\r\n    axios.post(url, orderData )\r\n        .then(response => {\r\n            dispatch(burgerOrderSuccess(response.data.name, orderData));\r\n        })\r\n        .catch(error =>{\r\n            dispatch(burgerOrderFail(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) =>{\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        fetchedOrders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) =>{\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersLoad = ()=>{\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_LOAD\r\n    }\r\n}\r\n\r\nexport const handleFetchOrders = (token,userId)=>{\r\n    return dispatch =>{\r\n    dispatch(fetchOrdersLoad());\r\n    const url = '/orders.json?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"gi';\r\n    axios.get(url)\r\n    .then((res)=>{\r\n        const storedOrders = [];\r\n        for(let key in res.data){\r\n            storedOrders.push({\r\n                ...res.data[key],\r\n                id: key\r\n            });\r\n        }\r\n        dispatch(fetchOrdersSuccess(storedOrders));\r\n    }).catch(error => {\r\n        dispatch(fetchOrdersFail(error));\r\n    });\r\n    }\r\n}","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button'\nimport styles from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props)=>{\n    return (\n        <div className = {styles.CheckoutSummary}>\n            <h1>Thats your burger, bon'apetit!</h1>\n            <div style = {{width: '300px', height: '300px', margin: 'auto'}}>\n                <Burger ingredients = {props.ingredients}/>\n            </div>\n            <Button \n            buttonType = 'Danger' \n            click = {props.cancelFunction}>Cancel</Button>\n            <Button \n            buttonType = 'Success' \n            click = {props.continueFunction}>Continue</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport styles from './Input.module.css'\n\nconst input = (props) =>{\n    let inputElement = null;\n    let newStyle = [styles.InputElement];\n\n    if(!props.isValid && props.shouldValid && props.moded){\n        newStyle.push(styles.Invalid);\n    }\n\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input \n            className = {newStyle.join(' ')} \n            {...props.elementConfig} \n            value = {props.value}\n            onChange = {props.change}/>;\n            break;\n        case('textarea'):\n            inputElement = <textarea \n            className = {newStyle.join(' ')} \n            {...props}\n            value = {props.value}\n            onChange = {props.change}\n            />;\n            break;\n        case('select'):\n            inputElement = (\n            <select  className = {newStyle.join(' ')} value = {props.value} onChange = {props.change}>  \n            {props.elementConfig.options.map((option)=>{\n                return(<option key = {option.value} value = {option.value}>{option.displayValue}</option>);\n            })}\n            </select>);\n        break;\n        default:\n            inputElement = <input \n            className = {styles.InputElement} \n            {...props}\n            value = {props.value}\n            onChange = {props.change}\n            />;\n            break;\n    }\n\n    return(\n        <div>\n            <label className = {styles.Label}>{props.labelText}</label>\n            {inputElement }\n        </div>\n    );\n}\n\nexport default input;","export const checkValidity = (value, rules)=>{\r\n    let isValid = true;\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail){\r\n            isValid = /\\S+@\\S+\\.\\S+/.test(value) && isValid\r\n        }\r\n    }\r\n    else{\r\n        isValid = true;\r\n    }\r\n    return isValid;\r\n}","import React from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './ContactData.module.css';\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport axios from '../../axios-orders';\nimport Input from '../../components/UI/Input/Input';\nimport {connect} from 'react-redux';\nimport WithError from '../../hoc/WithError/WithError';\nimport * as orderActions from '../../store/actions/index';\nimport {checkValidity} from '../../shared/shared';\n\nclass ContactData extends React.Component{\n    state = {\n        orderForm: {\n            name: {\n            elementType: 'input',\n            elementConfig:{\n                type : 'text',\n                placeholder : 'Your name',\n                name : 'name'\n            },\n            value: '',\n            validation: {\n                required: true,\n            },\n            valid: false,\n            moded: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig:{\n                    type : 'text',\n                    placeholder : 'Your Email',\n                    name : 'email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                moded: false\n            },\n            adress:{\n                elementType: 'input',\n                elementConfig:{\n                    type : 'text',\n                    placeholder : 'Your Adress',\n                    name : 'adress'\n                },\n                value: '' ,\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 100\n                },\n                valid: false,\n                moded: false\n            },\n            delivery:{\n                elementType: 'select',\n                elementConfig:{\n                    options: [\n                        {value: 'fast', displayValue: 'Fast' },\n                        {value: 'cheap', displayValue: 'Cheap' }\n                    ]\n                },\n                value: 'fast',\n                valid: true,\n                validation:{}\n            },\n        },\n        formIsValid: false,\n        loading: false\n    };\n    \n    changeValHandler = (event, inputId) => {\n        const updatedForm = {\n            ...this.state.orderForm\n        }\n\n        const updatedFormElement = {\n            ...this.state.orderForm[inputId]\n        }\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.moded = true;\n\n        updatedForm[inputId] = updatedFormElement;\n\n        let updatedFormIsValid =  true;\n        for(let elementId in updatedForm){\n            updatedFormIsValid = updatedForm[elementId].valid && updatedFormIsValid;\n        }\n\n        this.setState({orderForm: updatedForm, formIsValid: updatedFormIsValid});\n    }\n\n    submitHandler = (event) =>{\n        event.preventDefault();\n    }\n\n    orderHandler = (event)=>{\n        event.preventDefault();\n\n        /*\n        this.setState ( {\n            loading: true\n        });*/\n        \n        let formData = {};\n\n        for(let formElementId in this.state.orderForm ){\n            formData[formElementId] = this.state.orderForm[formElementId].value;\n        }\n\n        const postData = {\n            ingredients : this.props.ingr,\n            cost: this.props.cost,\n            orderData: formData,\n            userId: this.props.userId\n        }\n\n        this.props.handleBurgerOrder(postData, this.props.token);               \n    }\n\n    render(){\n\n        let formArray = [];\n\n        for (let keyVal in this.state.orderForm){\n            formArray.push(\n                {\n                    id: keyVal,\n                    config: this.state.orderForm[keyVal]\n                }\n            )\n        }\n\n        let form = (        \n        <form onSubmit = {this.orderHandler}>\n            <h4>Your order data: </h4>\n            {formArray.map((formElement)=>{\n                return (\n                    <Input \n                        key = {formElement.id}\n                        elementType = {formElement.config.elementType} \n                        elementConfig = {formElement.config.elementConfig}\n                        value = {formElement.config.value} \n                        isValid = {formElement.config.valid}\n                        shouldValid = {formElement.config.validation}\n                        moded = {formElement.config.moded}\n                        change = {(event) =>this.changeValHandler(event, formElement.id)}\n                        />);\n            })}\n            <Button buttonType = 'Success' disabled = {!this.state.formIsValid}>ORDER!</Button>\n        </form>);\n        if(this.props.loading){\n            form = <Spinner/>\n        }\n        return(\n        <div className = {styles.ContactData}>\n        {form}\n        </div>);\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        ingr: state.burgerBuilder.ingredients,\n        cost: state.burgerBuilder.cost,\n        loading: state.order.loading,\n        userId: state.login.userId,\n        token: state.login.token\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        handleBurgerOrder: (postData,token)=>dispatch(orderActions.handleBurgerOrder(postData,token))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WithError(ContactData,axios));","import React from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport {Route, Redirect} from 'react-router-dom';\nimport ContactData from '../../containers/ContactData/ContactData';\nimport {connect} from 'react-redux';\n\nclass Checkout extends React.Component{\n\n    checkoutCancel = ()=>{\n        this.props.history.goBack();\n    }\n\n    checkoutContinue = () =>{\n        this.props.history.replace('checkout/contact-data');\n    }\n\n    render(){\n        let summary = <Redirect to = '/'/>\n        let purchasedRedirect = this.props.purchased ? <Redirect to = '/'/> : null;\n        \n        if(this.props.ingr){\n            summary = (<div>\n            {purchasedRedirect}\n            <CheckoutSummary \n                ingredients = {this.props.ingr}\n                cancelFunction = {this.checkoutCancel}\n                continueFunction = {this.checkoutContinue}/>\n            <Route \n                path = {this.props.match.path + '/contact-data'} \n                component = {ContactData}\n                />\n        </div>)\n        }\n\n        return summary;\n    };    \n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        ingr: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport styles from './Order.module.css';\n\nconst order = (props) =>{\n    const ingredients = [];\n\n    for(let ingredientName in props.ingredients){\n        ingredients.push({name: ingredientName, val: props.ingredients[ingredientName]});\n    }\n\n    const ingredientText = ingredients.map((ig)=>{\n        return <span key = {ig.name}> {ig.name}:({ig.val}) </span>\n    })\n\n    return(\n        <div className = {styles.Order} key = {props.id}>\n            <p>item {ingredientText}</p>\n            <p>Total cost <b>{props.cost}</b></p>            \n        </div>\n    )\n}\n\nexport default order;","import React from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport WithError from '../../hoc/WithError/WithError';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends React.Component{\n\n    componentDidMount(){\n       this.props.handleFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render(){\n\n    let orders = <Spinner/>;\n    \n    if(!this.props.loading){\n    orders = \n    (<div>\n        {this.props.orders.map((order)=>(\n            <Order \n            key = {order.id}\n            ingredients = {order.ingredients}\n            cost = {order.cost}\n            />\n        ))}\n    </div>\n    );\n    }\n    \n    return orders;\n    }\n}\n\nconst mapStateToProps = state =>{\n    return{\n        loading: state.order.loading,\n        orders: state.order.orders,\n        token: state.login.token,\n        userId: state.login.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return{\n        handleFetchOrders: (token,userId)=>dispatch(actions.handleFetchOrders(token,userId))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WithError(Orders, axios));","import React, {Component, Fragment} from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Styles from './LoginScreen.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {checkValidity} from '../../shared/shared';\r\n\r\nclass LoginScreen extends Component {\r\n    state = {\r\n        inputs: {\r\n            email: {\r\n            elementType: 'input',\r\n            elementConfig:{\r\n                type : 'text',\r\n                placeholder : 'Email',\r\n                name : 'email '\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            moded: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type : 'password',\r\n                    placeholder : 'Password',\r\n                    name : 'password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false,\r\n                moded: false\r\n                }\r\n        },\r\n        register: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        if( !this.props.isBuilded && this.props.redirectUrl !== '/'){\r\n            this.props.redirectUrl()\r\n        }\r\n    }\r\n\r\n    changeValHandler = (event, controlName) => {\r\n\r\n        const updatedInputs = {\r\n            ...this.state.inputs,\r\n            [controlName]: {\r\n                ...this.state.inputs[controlName],\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value , this.state.inputs[controlName].validation),\r\n                moded: true\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            inputs: updatedInputs\r\n        });\r\n    }\r\n\r\n    handleLoginClick = (event)=>{\r\n        event.preventDefault();\r\n        this.props.loginHandle(this.state.inputs.email.value,this.state.inputs.password.value,this.state.register);\r\n    }\r\n\r\n    changeMethod = () =>{\r\n        this.setState(prevState =>{\r\n            return{\r\n                register : !prevState.register\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let formArray = [];\r\n\r\n        for (let keyVal in this.state.inputs){\r\n            formArray.push(\r\n                {\r\n                    id: keyVal,\r\n                    config: this.state.inputs[keyVal]\r\n                }\r\n            )\r\n        }\r\n\r\n        let form = formArray.map(\r\n            (formElement) => {\r\n                return (\r\n                    <Input \r\n                        key = {formElement.id}\r\n                        elementType = {formElement.config.elementType} \r\n                        elementConfig = {formElement.config.elementConfig}\r\n                        value = {formElement.config.value} \r\n                        isValid = {formElement.config.valid}\r\n                        shouldValid = {formElement.config.validation}\r\n                        moded = {formElement.config.moded}\r\n                        change = {(event) =>this.changeValHandler(event, formElement.id)}\r\n                        />);\r\n            }\r\n        )\r\n        \r\n        let loginType = this.state.register ? 'login' :  'register';\r\n        \r\n        let formOutput = null;\r\n\r\n        if(this.props.loading){\r\n            formOutput = <Spinner/>\r\n        }else{\r\n            formOutput = (<Fragment>\r\n                <h2>{this.state.register ? 'Register new user' : 'Login'}</h2>\r\n                <form >\r\n                    {form}\r\n                    <Button \r\n                    buttonType = 'Success'\r\n                    click = {this.handleLoginClick}>\r\n                    Confirm\r\n                    </Button>\r\n                </form>\r\n                <Button\r\n                 buttonType = 'Danger'\r\n                 click = {this.changeMethod}>\r\n                 Switch to: {loginType}\r\n                </Button>\r\n            </Fragment>);\r\n        }\r\n\r\n        let errorOutput = null;\r\n        if(this.props.error){\r\n            errorOutput = <p>{this.props.error}</p>\r\n        }\r\n\r\n        let authRedirect = null\r\n        if(this.props.isAuth)\r\n            authRedirect = <Redirect to = {this.props.urlRedirect}/>\r\n\r\n        return (<div className = {Styles.LoginScreen}>\r\n           {authRedirect}\r\n           {errorOutput}\r\n           {formOutput}\r\n           </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.login.load,\r\n        error: state.login.error,\r\n        isAuth: state.login.token !== null,\r\n        urlRedirect: state.login.urlRedirect,\r\n        isBuilded: state.burgerBuilder.isBuilded\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        loginHandle : (email,password,isRegister)=>dispatch(actions.loginHandle(email,password, isRegister)),\r\n        redirectUrl : ()=>dispatch(actions.changeRedirect('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginScreen);","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Logout extends Component{\r\n    componentDidMount(){\r\n        this.props.logUserOut();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to = '/' />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n       logUserOut : ()=>dispatch(actions.logOut())\r\n    };\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport LoginScreen from './containers/LoginScreen/LoginScreen';\nimport Logout from './components/Logout/Logout';\nimport * as actions from './store/actions/index';\nimport {connect} from 'react-redux';\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.checkLoginStatus();\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path = '/' exact component = {BurgerBuilder}/>\n        <Route path = '/login' component = {LoginScreen}/>\n        <Redirect to = '/' />\n      </Switch>\n    );\n\n    if(this.props.isAuth){\n      routes = (\n        <Switch>\n          <Route path = '/login' component = {LoginScreen}/>\n          <Route path = '/checkout' component = {Checkout}/>  \n          <Route path = '/orders' component = {Orders}/>  \n          <Route path = '/logout' component = {Logout}/>\n          <Route path = '/' exact component = {BurgerBuilder}/>\n          <Redirect to = '/' />\n        </Switch>\n      )\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>{\n  return{\n    isAuth: state.login.token !== null\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkLoginStatus : () => dispatch(actions.checkLoginStatus())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProps)=>{\r\n    return{\r\n    ...oldObject,\r\n    ...updatedProps\r\n}\r\n};\r\n\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utitlity';\r\n \r\nconst initialState = {\r\n    ingredients: {},\r\n    cost: 2,\r\n    error: null,\r\n    isBuilded: false\r\n}\r\n\r\nconst INGREDIENT_PRICE = {\r\n    salad: 0.2,\r\n    bacon: 1,\r\n    cheese: 0.5,\r\n    meat: 2\r\n}\r\n\r\nconst addIngredient = (state,action)=>{\r\n    const updatedIngredientAdd = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredientsAdd = updateObject(state.ingredients, updatedIngredientAdd);\r\n    const updatedStateAdd = {\r\n        ingredients: updatedIngredientsAdd,\r\n        cost: state.cost + INGREDIENT_PRICE[action.ingredientName],\r\n        isBuilded: true \r\n    }\r\n\r\n    return updatedStateAdd\r\n}\r\n\r\nconst removeIngredient =(state,action)=>{\r\n    const updatedIngredientRem = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n            const updatedIngredientsRem = updateObject(state.ingredients, updatedIngredientRem);\r\n            const updatedState = {\r\n                ingredients: updatedIngredientsRem,\r\n                cost: state.cost + INGREDIENT_PRICE[action.ingredientName],\r\n                isBuilded: true \r\n            }\r\n    \r\n    return updatedState\r\n}\r\n\r\nconst reducer = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n        return addIngredient(state,action);\r\n        \r\n        case actionTypes.REMOVE_INGREDIENT:\r\n        return removeIngredient(state,action);\r\n\r\n        case actionTypes.INIT_INGRIDIENTS:\r\n        return updateObject(state,{ cost: 2,ingredients:action.ingredients, error: false, isBuilded: false})\r\n\r\n        case actionTypes.INIT_INGRIDIENTS_FAIL:\r\n        return updateObject(state,{error: true})\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utitlity';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    orders: [],\r\n    purchased: false,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case(actionTypes.BURGER_ORDER_SUCCESS):\r\n\r\n        const newOrder = {\r\n            ...action.orderData,\r\n            id: action.id\r\n        }\r\n\r\n        return updateObject(state,\r\n            {orders: state.orders.concat(newOrder),\r\n            loading: false,\r\n            purchased: true}\r\n        );\r\n        \r\n        case(actionTypes.BURGER_ORDER_FAIL):\r\n        return updateObject(state,{\r\n            error: action.error,\r\n            loading: false\r\n        })\r\n\r\n        case(actionTypes.BURGER_ORDER_LOAD):\r\n        return updateObject(state,{loading: true});\r\n\r\n        case(actionTypes.BURGER_ORDER_INIT):\r\n        return updateObject(state,{purchased: false});\r\n\r\n        case(actionTypes.FETCH_ORDERS_LOAD):\r\n        return updateObject(state,{loading: true});\r\n\r\n        case(actionTypes.FETCH_ORDERS_FAIL):\r\n        return updateObject(state,{loading: false, error: action.error});\r\n\r\n        case(actionTypes.FETCH_ORDERS_SUCCESS):\r\n        return updateObject(state,{orders: action.fetchedOrders, loading: false});\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utitlity';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    load: false,\r\n    urlRedirect: '/'\r\n}\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case(actionTypes.LOGIN_SUCCESS):\r\n            return updateObject(state,{\r\n                token: action.token,\r\n                userId: action.userId,\r\n                load: false,\r\n                error: null\r\n            });\r\n        \r\n        case(actionTypes.LOGIN_START):\r\n            return updateObject(state,{load: true, error: null});\r\n        \r\n        case(actionTypes.LOGIN_FAIL):\r\n            return updateObject(state,{error: action.error, load: false});\r\n        \r\n        case(actionTypes.LOGIN_LOGOUT):\r\n            return updateObject(state,{userId: null, token: null});\r\n\r\n        case(actionTypes.REDIRECT_CHANGE):\r\n            return updateObject(state,{urlRedirect: action.urlRedirect});\r\n        \r\n        default: return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport ordersReducer from './store/reducers/order';\nimport loginReducer from './store/reducers/login';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers(\n    {\n        burgerBuilder: burgerBuilderReducer,\n        order: ordersReducer,\n        login: loginReducer\n    }\n);\n\nconst store = createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(<Provider store = {store}><BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App /></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}