{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Layout/Layout.module.css","assets/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/Menu/Menu.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/LoginScreen/LoginScreen.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Menu/Menu.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/WithError/WithError.js","store/actions/login.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/orders.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/shared.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/LoginScreen/LoginScreen.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/utitlity.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/login.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Logo","Open","Close","DesktopOnly","BuildControl","Label","Less","More","Input","InputElement","Invalid","Toolbar","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","Menu","Backdrop","Burger","Modal","Loader","load4","CheckoutSummary","ContactData","Order","LoginScreen","logo","props","react_default","a","createElement","className","styles","alt","src","logoImg","navigationItem","react_router_dom","to","link","exact","activeClassName","children","navigationItems","isAuth","menu","onClick","click","toolbar","backdrop","show","sideDrawer","currentClasses","Fragment","join","Layout","state","showSideDrawer","sideDrawerHandler","_this","setState","this","classes","React","Component","connect","login","token","burgerIngredient","ingridient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","index","BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","disabled","removeFunc","addFunc","Number","cost","toFixed","ctrl","removeHandler","addHandler","disabledInfo","wasOrdererClick","orderBlocked","nextProps","nextState","style","transform","opacity","display","button","buttonType","ingr","burgerBuilder","listOfOrder","ingredientsKey","cancelClick","checkoutClick","instance","axios","create","baseURL","loader","withError","WrappedCopoment","_React$Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","confirmError","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","loginSuccess","userId","logOut","localStorage","removeItem","handleTokenExpire","expireTime","dispatch","setTimeout","changeRedirect","url","urlRedirect","BurgerBuilder","wasOrdered","loading","possibleOrderHandler","sum","wasOrderedHandler","changeURL","history","push","cancelOrderHandler","checkoutHandler","orderInit","handleLoading","modal","OrderSummary","Spinner","ingredientInit","objectSpread","currentModal","onIgredientDelete","onIgredientAdd","isBuilded","name","ingredientName","actions","get","then","data","catch","WithError","checkoutSummary","width","height","margin","cancelFunction","continueFunction","input","inputElement","newStyle","isValid","shouldValid","moded","elementType","assign","elementConfig","onChange","change","options","option","displayValue","labelText","checkValidity","rules","required","trim","minLength","maxLength","isEmail","test","orderForm","placeholder","validation","valid","email","adress","delivery","formIsValid","changeValHandler","event","inputId","updatedForm","updatedFormElement","target","updatedFormIsValid","elementId","submitHandler","preventDefault","orderHandler","formData","formElementId","postData","orderData","handleBurgerOrder","formArray","keyVal","id","config","form","onSubmit","formElement","order","post","burgerOrderFail","orderActions","Checkout","checkoutCancel","goBack","checkoutContinue","replace","summary","react_router","purchasedRedirect","purchased","path","match","component","val","ingredientText","ig","Orders","handleFetchOrders","orders","storedOrders","fetchedOrders","fetchOrdersFail","inputs","password","register","controlName","updatedInputs","defineProperty","handleLoginClick","loginHandle","changeMethod","prevState","redirectUrl","loginType","formOutput","react","errorOutput","authRedirect","Styles","load","isRegister","returnSecureToken","process","REACT_APP_FIREBASE_KEY","Date","getTime","expiresIn","setItem","idToken","localId","err","Logout","logUserOut","App","checkLoginStatus","routes","containers_Layout_Layout","withRouter","getItem","expirationDate","Boolean","window","location","hostname","updateObject","oldObject","updatedProps","initialState","INGREDIENT_PRICE","salad","bacon","cheese","meat","reducer","undefined","action","updatedIngredientAdd","addIngredient","updatedIngredientRem","removeIngredient","newOrder","require","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","ordersReducer","loginReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7f98527.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2uxvu\",\"BreadTop\":\"BurgerIngredient_BreadTop__1p4xb\",\"Seeds1\":\"BurgerIngredient_Seeds1__4MtA-\",\"Seeds2\":\"BurgerIngredient_Seeds2__2EemD\",\"Meat\":\"BurgerIngredient_Meat__2l-54\",\"Cheese\":\"BurgerIngredient_Cheese__3j3kU\",\"Salad\":\"BurgerIngredient_Salad__-SXB2\",\"Bacon\":\"BurgerIngredient_Bacon__17wuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1RGC3\",\"Logo\":\"SideDrawer_Logo__2QO0t\",\"Open\":\"SideDrawer_Open__1n6ei\",\"Close\":\"SideDrawer_Close__2Eyc4\",\"DesktopOnly\":\"SideDrawer_DesktopOnly__2ZDGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__29Wbf\",\"Label\":\"BuildControl_Label__2aUT0\",\"Less\":\"BuildControl_Less__3hccY\",\"More\":\"BuildControl_More__1Gqot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1Q9lZ\",\"Label\":\"Input_Label__2-NZv\",\"InputElement\":\"Input_InputElement__3o1E2\",\"Invalid\":\"Input_Invalid__3TOwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__euiRy\",\"Logo\":\"Toolbar_Logo__PGRTl\",\"DesktopOnly\":\"Toolbar_DesktopOnly__o3uoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2t1iN\",\"active\":\"NavigationItem_active__2uaZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2ERri\",\"OrderButton\":\"BuildControls_OrderButton__39pQu\",\"enable\":\"BuildControls_enable__3HW7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3ngHV\",\"Success\":\"Button_Success__OBG8u\",\"Danger\":\"Button_Danger__2tX-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__HxA0v\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2p1Qb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1t3Co\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__3-wgn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2tjBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1yYRA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3tFx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2IrN9\",\"load4\":\"Spinner_load4__2bP0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__tRfoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__6mE_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__mfHdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginScreen\":\"LoginScreen_LoginScreen__7Kyq3\"};","import React from 'react';\r\nimport logoImg from '../../assets/burger-logo.png'\r\nimport styles from './Logo.module.css'\r\n\r\nconst logo = (props) =>{\r\n    return(\r\n    <div className = {styles.Logo}>\r\n        <img alt = 'logo' src = {logoImg} ></img>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport styles from './NavigationItem.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem = (props) =>{\r\n    return (\r\n            <li className = {styles.NavigationItem}>\r\n                <NavLink \r\n                    to = {props.link} exact\r\n                    activeClassName = {styles.active}>\r\n                    {props.children}</NavLink>\r\n            </li>\r\n    );\r\n}\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport styles from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) =>{\r\n    return (\r\n        <ul className = {styles.NavigationItems} >\r\n                <NavigationItem link = '/' active = {true} >Burger</NavigationItem>\r\n            {props.isAuth ? <NavigationItem link = '/orders'>Orders</NavigationItem> : null }\r\n            {!props.isAuth \r\n                ? <NavigationItem link = '/login'>Login</NavigationItem>\r\n                : <NavigationItem link = '/logout'>Logout</NavigationItem>}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport styles from './Menu.module.css'\r\n\r\nconst menu = (props)=>{\r\n    return (\r\n        <div className = {styles.Menu} onClick = {props.click}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default menu;","import React from 'react';\r\nimport styles from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Menu from '../Menu/Menu';\r\n\r\nconst toolbar = (props)=>(\r\n    <header className = {styles.Toolbar}>\r\n        <Menu click = {props.click}/>\r\n        <div className = {styles.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className = {styles.DesktopOnly}>\r\n            <NavigationItems isAuth = {props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\nimport styles from './Backdrop.module.css';\r\n\r\nconst backdrop = (props)=>{\r\n    return props.show ? <div onClick = {props.click} className = {styles.Backdrop}></div> : null;\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport styles from './SideDrawer.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nconst sideDrawer = (props) => {\r\n\r\n    let currentClasses = [styles.SideDrawer, styles.Close]; \r\n    \r\n    if(props.show)\r\n        currentClasses = [styles.SideDrawer, styles.Open];  \r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className = {currentClasses.join(' ')} onClick = {props.click}>\r\n            <div className = {styles.Logo}>\r\n                <Logo/>\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuth = {props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        <Backdrop click = {props.click} show = {props.show}/>\r\n        </React.Fragment>       \r\n    );\r\n\r\n}\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends React.Component{ \r\n   \r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerHandler = ()=>{\r\n        this.setState({showSideDrawer : !this.state.showSideDrawer});\r\n    }\r\n\r\n    render(){\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Toolbar \r\n            click = {this.sideDrawerHandler}\r\n            isAuth = {this.props.isAuth}/>\r\n            <SideDrawer \r\n            isAuth = {this.props.isAuth}\r\n            show = {this.state.showSideDrawer} \r\n            click = {this.sideDrawerHandler}/>\r\n            <main className = {classes.Content}>\r\n                {this.props.children}\r\n            </main>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{   \r\n    return {\r\n        isAuth: state.login.token != null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst burgerIngredient = (props) => {\r\n    let ingridient = null;\r\n    \r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingridient = <div className = {classes.BreadBottom}></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingridient = (\r\n                <div className = {classes.BreadTop}>\r\n                    <div className = {classes.Seeds1}></div>\r\n                    <div className = {classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case('meat'):\r\n               ingridient = <div className = {classes.Meat}></div>;\r\n                break;\r\n        case('cheese'):\r\n            ingridient = <div className = {classes.Cheese}></div>;\r\n                break;\r\n        case('salad'):\r\n            ingridient = <div className = {classes.Salad}></div>;\r\n                break;\r\n        case('bacon'):\r\n            ingridient = <div className = {classes.Bacon}></div>;\r\n                break;\r\n        default:\r\n            ingridient = null;\r\n            break;\r\n    }\r\n\r\n    return ingridient;\r\n};\r\n\r\nburgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default burgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) =>{\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).map(\r\n        igKey =>{\r\n                return [...Array(props.ingredients[igKey])]\r\n                .map((_,index) =>{\r\n                    return <BurgerIngredient key = {igKey + index} type = {igKey} />\r\n                })\r\n            }).reduce((arr,el)=>{\r\n                return arr.concat(el)\r\n            },[]);\r\n    \r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <div>No ingredients, add some!</div>;\r\n    }\r\n            \r\n    return(\r\n        <div className = {classes.Burger}>\r\n            <BurgerIngredient type = 'bread-top' />\r\n                {transformedIngredients}\r\n            <BurgerIngredient type = 'bread-bottom' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import styles from './BuildControl.module.css'\r\nimport React from 'react';\r\n\r\nconst buildControl= (props) => {\r\n    return(\r\n        <div className = {styles.BuildControl}>\r\n            <div className = {styles.Label}>{props.label}</div>\r\n            <button disabled = {props.disabled} className = {styles.Less} onClick = {props.removeFunc}>Less</button>\r\n            <button className = {styles.More} onClick = {props.addFunc}>More</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buildControl;","import styles from './BuildControls.module.css';\r\nimport BuildControl from  './BuildControl/BuildControl';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst buildControls= (props) => {\r\n    const controls = [\r\n        {label: 'Salad', type: 'salad'},\r\n        {label: 'Bacon', type: 'bacon'},\r\n        {label: 'Cheese', type: 'cheese'},\r\n        {label: 'Meat', type: 'meat'}\r\n    ];\r\n\r\n    return(\r\n        <div className = {styles.BuildControls}>\r\n            <p>Current cost: <b>{Number(props.cost).toFixed(2)}</b></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl \r\n                    removeFunc = {()=>props.removeHandler(ctrl.type)} \r\n                    addFunc = {()=>props.addHandler(ctrl.type)} \r\n                    key = {ctrl.label} label = {ctrl.label}\r\n                    disabled = {props.disabledInfo[ctrl.type]}/>\r\n                )\r\n            )}\r\n            <button \r\n                onClick = {props.wasOrdererClick}\r\n                className = {styles.OrderButton} \r\n                disabled = {props.orderBlocked}>{props.isAuth ? 'ORDER': 'GO TO LOGIN SCREEN'} </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        isAuth: state.login.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(buildControls);","import React from 'react';\r\nimport styles from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <React.Fragment >\r\n            <Backdrop \r\n            show = {this.props.show}\r\n            click = {\r\n                this.props.click\r\n            }\r\n            /> \r\n            <div className = {styles.Modal}\r\n            style = {{transform: this.props.show ? 'translateY(0)' : 'translateY(-100)',\r\n                    opacity: this.props.show ? '1' : '0',\r\n                    display: this.props.show ? 'block':'none'}} >\r\n                {this.props.children} \r\n            </div> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport styles from './Button.module.css'\r\n\r\nconst button = (props) => {\r\n    return <button\r\n        disabled = {props.disabled}\r\n        className = {[styles.Button, styles[props.buttonType]].join(' ')}\r\n        onClick = {props.click}>\r\n        {props.children}\r\n    </button>\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button'\r\nimport {connect} from 'react-redux';\r\n\r\nconst orderSummary = (props)=>{\r\n    \r\n    let listOfOrder = null\r\n    if(props.ingr){\r\n    listOfOrder = Object.keys(props.ingredients)\r\n    .map((ingredientsKey)=>{\r\n        return (<li key = {ingredientsKey}>{ingredientsKey} : {props.ingredients[ingredientsKey]}</li>);\r\n    }\r\n    )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Your order:</h1>\r\n            <ul>\r\n                {listOfOrder}\r\n            </ul>\r\n            <p>Cost: {props.cost}</p>\r\n            <Button \r\n            buttonType = 'Danger' \r\n            click ={props.cancelClick} >Cancel</Button>\r\n            <Button \r\n            click = {props.checkoutClick} \r\n            buttonType = 'Success'>Continue</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        ingr: state.burgerBuilder.ingredients,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(orderSummary);","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burgerapp-59617.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst loader = (props)=>{\r\n        return (\r\n            <div className={styles.Loader}>Loading</div>\r\n        );\r\n}\r\n\r\nexport default loader;","import React from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\n\r\nconst withError = (WrappedCopoment,axios)=>{\r\n    return class extends React.Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentDidMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n\r\n                return req;\r\n            })\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res,error => {\r\n                this.setState({error: error})\r\n            });\r\n        }\r\n\r\n        copomentWillUnmount(){  \r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        confirmError = ()=>{\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <React.Fragment>\r\n                    <Modal \r\n                    show = {this.state.error}\r\n                    click = {this.confirmError}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedCopoment {...this.props}/>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default withError","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginStart = ()=>{\r\n    return{\r\n        type: actionTypes.LOGIN_START\r\n    }\r\n}\r\n\r\nexport const loginFail = (error)=>{\r\n    return{\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (token, userId)=>{\r\n    return{\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const logOut = ()=>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n\r\n    return{\r\n        type: actionTypes.LOGIN_LOGOUT\r\n    }\r\n}\r\n\r\nexport const handleTokenExpire = (expireTime)=>{\r\n    return dispatch =>{\r\n        setTimeout(()=> dispatch(logOut()) , expireTime * 1000);\r\n    }\r\n}\r\n\r\nexport const changeRedirect = (url)=>{\r\n    return{\r\n        type: actionTypes.REDIRECT_CHANGE,\r\n        urlRedirect : url\r\n    }\r\n}\r\n\r\nexport const loginHandle = (email,password, isRegister)=>{\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        const config = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = null\r\n        \r\n        if(isRegister)\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + process.env.REACT_APP_FIREBASE_KEY;\r\n        else\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + process.env.REACT_APP_FIREBASE_KEY;\r\n\r\n        axios.post(url,config)\r\n        .then(\r\n            response => {\r\n                const expireTime = new Date(new Date().getTime() + (response.data.expiresIn * 1000));  \r\n                localStorage.setItem('token',response.data.idToken);\r\n                localStorage.setItem('expirationDate',expireTime);\r\n                localStorage.setItem('userId',response.data.localId);\r\n                dispatch(loginSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(handleTokenExpire(response.data.expiresIn));\r\n            }\r\n        )\r\n        .catch(\r\n            err => {\r\n                dispatch(loginFail(err.response.data.error.message));\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const checkLoginStatus = ()=>{\r\n    return dispatch =>{\r\n        const token = localStorage.getItem('token');\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        if(!token)\r\n            dispatch(logOut());\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate > new Date()){\r\n                dispatch(loginSuccess(token,userId));\r\n                dispatch(handleTokenExpire((expirationDate.getTime() - new Date().getTime())/100));\r\n            }\r\n            else\r\n                dispatch(logOut());\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const INIT_INGRIDIENTS = 'INIT_INGRIDIENTS';\r\nexport const INIT_INGRIDIENTS_FAIL = 'INIT_INGRIDIENTS_FAIL';\r\n\r\nexport const BURGER_ORDER_SUCCESS = 'BURGER_ORDER_SUCCESS';\r\nexport const BURGER_ORDER_FAIL = 'BURGER_ORDER_FAIL';\r\nexport const BURGER_ORDER_LOAD = 'BURGER_ORDER_LOAD';\r\nexport const BURGER_ORDER_INIT = 'BURGER_ORDER_INIT';\r\nexport const REDIRECT_CHANGE = 'REDIRECT_CHANGE';\r\n\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const FETCH_ORDERS_LOAD = 'FETCH_ORDERS_LOAD';\r\n\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGIN_LOGOUT = \"LOGIN_LOGOUT\";","import React from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport WithError from '../../hoc/WithError/WithError';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index'; \r\n\r\nclass BurgerBuilder extends React.Component{\r\n\r\n    state = {\r\n        orderBlocked: true,\r\n        wasOrdered: false,\r\n        loading: false\r\n    };\r\n  \r\n    componentDidMount (){\r\n        this.props.ingredientInit();\r\n    }\r\n\r\n    possibleOrderHandler = (ingredients)=>{\r\n        let sum = Object.keys(ingredients).map((igKey)=>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum + el;\r\n        },0)\r\n        \r\n        let orderBlocked = sum <=0;\r\n        return orderBlocked;\r\n    }\r\n\r\n    wasOrderedHandler = ()=>{\r\n        \r\n        if(this.props.isAuth)\r\n            this.setState({wasOrdered: true});\r\n        else{\r\n            this.props.changeURL('/checkout');\r\n            this.props.history.push('/login');\r\n        }\r\n    };\r\n    \r\n    cancelOrderHandler = () => {\r\n        this.setState({wasOrdered: !this.state.wasOrdered})\r\n    };\r\n\r\n    checkoutHandler = () =>{\r\n        this.props.orderInit();\r\n        this.props.history.push('/checkout'); \r\n    };\r\n\r\n    handleLoading = () =>{\r\n        \r\n        let modal =<OrderSummary \r\n        checkoutClick = {this.checkoutHandler} \r\n        cost = {this.props.cost} \r\n        cancelClick = {this.cancelOrderHandler} \r\n        ingredients = {this.props.ingr}\r\n        />\r\n\r\n        if(this.state.loading)\r\n            modal = <Spinner/>\r\n        \r\n        return modal;\r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n        let disabledInfo = {\r\n            ...this.props.ingr\r\n        };\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let currentModal = this.handleLoading(); \r\n\r\n        let burger = null;\r\n        if(this.props.ingr){\r\n            burger = (\r\n            <React.Fragment>\r\n                <Burger ingredients = {this.props.ingr}/>\r\n                <BuildControls \r\n                    removeHandler = {this.props.onIgredientDelete} \r\n                    addHandler = {this.props.onIgredientAdd}\r\n                    disabledInfo = {disabledInfo}\r\n                    cost = {this.props.cost}\r\n                    orderBlocked = {this.possibleOrderHandler(this.props.ingr)}\r\n                    wasOrdererClick = {this.wasOrderedHandler}/>\r\n            </React.Fragment>\r\n            );\r\n        }else{\r\n            burger = <Spinner/>\r\n        }\r\n\r\n        if(this.props.error){\r\n            burger = (\r\n                <div>Burger can't be loaded!</div>\r\n            )\r\n        }\r\n\r\n        return(\r\n        <React.Fragment>\r\n            <Modal show = {this.state.wasOrdered} click = {this.cancelOrderHandler}>\r\n                {currentModal}\r\n            </Modal>\r\n            {burger}\r\n        </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        ingr: state.burgerBuilder.ingredients,\r\n        cost: state.burgerBuilder.cost,\r\n        error: state.burgerBuilder.error,\r\n        isAuth : state.login.token !== null,\r\n        isBuilded: state.burgerBuilder.isBuilded\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        onIgredientAdd: (name)=>dispatch(actions.addIngredient(name)),\r\n        onIgredientDelete: (name)=>dispatch(actions.removeIngredient(name)),\r\n        ingredientInit: ()=>dispatch(actions.initIngredients()),\r\n        orderInit: ()=>dispatch(actions.bugerOrderInit()),\r\n        changeURL: (url)=>dispatch(actions.changeRedirect(url))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WithError(BurgerBuilder,axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name)=>{\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name)=>{\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (initIngredients)=>{\r\n    return{\r\n        type: actionTypes.INIT_INGRIDIENTS,\r\n        ingredients: initIngredients\r\n    }\r\n}\r\n\r\nexport const setIngredientsImportFail = ()=>{\r\n    return{\r\n        type: actionTypes.INIT_INGRIDIENTS_FAIL\r\n    }\r\n}\r\n\r\nexport const initIngredients = ()=>{\r\n    return dispatch =>{\r\n        axios.get('/ingredients.json/')\r\n        .then(response =>{\r\n            dispatch(setIngredients(response.data));\r\n        }\r\n        ).catch(\r\n            dispatch(setIngredientsImportFail())\r\n        )\r\n    }\r\n}\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const burgerOrderSuccess = (orderId, postData)=>{\r\n    return{\r\n        type: actionTypes.BURGER_ORDER_SUCCESS,\r\n        id: orderId,\r\n        orderData: postData,\r\n        error: null\r\n    }\r\n}\r\n\r\nexport const burgerOrderFail = (error)=>{\r\n    return{\r\n        type: actionTypes.BURGER_ORDER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const burgerOrderLoading = ()=>{\r\n    return {\r\n        type: actionTypes.BURGER_ORDER_LOAD\r\n    }\r\n}\r\n\r\nexport const bugerOrderInit = ()=>{\r\n    return {\r\n        type: actionTypes.BURGER_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const handleBurgerOrder = (orderData, token)=>{\r\n    return dispatch =>{\r\n    dispatch(burgerOrderLoading());\r\n\r\n    const url = '/orders.json?auth=' + token;\r\n    axios.post(url, orderData )\r\n        .then(response => {\r\n            dispatch(burgerOrderSuccess(response.data.name, orderData));\r\n        })\r\n        .catch(error =>{\r\n            dispatch(burgerOrderFail(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) =>{\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        fetchedOrders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) =>{\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersLoad = ()=>{\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_LOAD\r\n    }\r\n}\r\n\r\nexport const handleFetchOrders = (token,userId)=>{\r\n    return dispatch =>{\r\n    dispatch(fetchOrdersLoad());\r\n    const url = '/orders.json?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"gi';\r\n    axios.get(url)\r\n    .then((res)=>{\r\n        const storedOrders = [];\r\n        for(let key in res.data){\r\n            storedOrders.push({\r\n                ...res.data[key],\r\n                id: key\r\n            });\r\n        }\r\n        dispatch(fetchOrdersSuccess(storedOrders));\r\n    }).catch(error => {\r\n        dispatch(fetchOrdersFail(error));\r\n    });\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button'\r\nimport styles from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props)=>{\r\n    return (\r\n        <div className = {styles.CheckoutSummary}>\r\n            <h1>Thats your burger, bon'apetit!</h1>\r\n            <div style = {{width: '300px', height: '300px', margin: 'auto'}}>\r\n                <Burger ingredients = {props.ingredients}/>\r\n            </div>\r\n            <Button \r\n            buttonType = 'Danger' \r\n            click = {props.cancelFunction}>Cancel</Button>\r\n            <Button \r\n            buttonType = 'Success' \r\n            click = {props.continueFunction}>Continue</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport styles from './Input.module.css'\r\n\r\nconst input = (props) =>{\r\n    let inputElement = null;\r\n    let newStyle = [styles.InputElement];\r\n\r\n    if(!props.isValid && props.shouldValid && props.moded){\r\n        newStyle.push(styles.Invalid);\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input \r\n            className = {newStyle.join(' ')} \r\n            {...props.elementConfig} \r\n            value = {props.value}\r\n            onChange = {props.change}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea \r\n            className = {newStyle.join(' ')} \r\n            {...props}\r\n            value = {props.value}\r\n            onChange = {props.change}\r\n            />;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n            <select  className = {newStyle.join(' ')} value = {props.value} onChange = {props.change}>  \r\n            {props.elementConfig.options.map((option)=>{\r\n                return(<option key = {option.value} value = {option.value}>{option.displayValue}</option>);\r\n            })}\r\n            </select>);\r\n        break;\r\n        default:\r\n            inputElement = <input \r\n            className = {styles.InputElement} \r\n            {...props}\r\n            value = {props.value}\r\n            onChange = {props.change}\r\n            />;\r\n            break;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <label className = {styles.Label}>{props.labelText}</label>\r\n            {inputElement }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","export const checkValidity = (value, rules)=>{\r\n    let isValid = true;\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail){\r\n            isValid = /\\S+@\\S+\\.\\S+/.test(value) && isValid\r\n        }\r\n    }\r\n    else{\r\n        isValid = true;\r\n    }\r\n    return isValid;\r\n}","import React from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport styles from './ContactData.module.css';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport axios from '../../axios-orders';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport WithError from '../../hoc/WithError/WithError';\r\nimport * as orderActions from '../../store/actions/index';\r\nimport {checkValidity} from '../../shared/shared';\r\n\r\nclass ContactData extends React.Component{\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n            elementType: 'input',\r\n            elementConfig:{\r\n                type : 'text',\r\n                placeholder : 'Your name',\r\n                name : 'name'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n            },\r\n            valid: false,\r\n            moded: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type : 'text',\r\n                    placeholder : 'Your Email',\r\n                    name : 'email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                moded: false\r\n            },\r\n            adress:{\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type : 'text',\r\n                    placeholder : 'Your Adress',\r\n                    name : 'adress'\r\n                },\r\n                value: '' ,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 100\r\n                },\r\n                valid: false,\r\n                moded: false\r\n            },\r\n            delivery:{\r\n                elementType: 'select',\r\n                elementConfig:{\r\n                    options: [\r\n                        {value: 'fast', displayValue: 'Fast' },\r\n                        {value: 'cheap', displayValue: 'Cheap' }\r\n                    ]\r\n                },\r\n                value: 'fast',\r\n                valid: true,\r\n                validation:{}\r\n            },\r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    };\r\n    \r\n    changeValHandler = (event, inputId) => {\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const updatedFormElement = {\r\n            ...this.state.orderForm[inputId]\r\n        }\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.moded = true;\r\n\r\n        updatedForm[inputId] = updatedFormElement;\r\n\r\n        let updatedFormIsValid =  true;\r\n        for(let elementId in updatedForm){\r\n            updatedFormIsValid = updatedForm[elementId].valid && updatedFormIsValid;\r\n        }\r\n\r\n        this.setState({orderForm: updatedForm, formIsValid: updatedFormIsValid});\r\n    }\r\n\r\n    submitHandler = (event) =>{\r\n        event.preventDefault();\r\n    }\r\n\r\n    orderHandler = (event)=>{\r\n        event.preventDefault();\r\n\r\n        /*\r\n        this.setState ( {\r\n            loading: true\r\n        });*/\r\n        \r\n        let formData = {};\r\n\r\n        for(let formElementId in this.state.orderForm ){\r\n            formData[formElementId] = this.state.orderForm[formElementId].value;\r\n        }\r\n\r\n        const postData = {\r\n            ingredients : this.props.ingr,\r\n            cost: this.props.cost,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.handleBurgerOrder(postData, this.props.token);               \r\n    }\r\n\r\n    render(){\r\n\r\n        let formArray = [];\r\n\r\n        for (let keyVal in this.state.orderForm){\r\n            formArray.push(\r\n                {\r\n                    id: keyVal,\r\n                    config: this.state.orderForm[keyVal]\r\n                }\r\n            )\r\n        }\r\n\r\n        let form = (        \r\n        <form onSubmit = {this.orderHandler}>\r\n            <h4>Your order data: </h4>\r\n            {formArray.map((formElement)=>{\r\n                return (\r\n                    <Input \r\n                        key = {formElement.id}\r\n                        elementType = {formElement.config.elementType} \r\n                        elementConfig = {formElement.config.elementConfig}\r\n                        value = {formElement.config.value} \r\n                        isValid = {formElement.config.valid}\r\n                        shouldValid = {formElement.config.validation}\r\n                        moded = {formElement.config.moded}\r\n                        change = {(event) =>this.changeValHandler(event, formElement.id)}\r\n                        />);\r\n            })}\r\n            <Button buttonType = 'Success' disabled = {!this.state.formIsValid}>ORDER!</Button>\r\n        </form>);\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n        return(\r\n        <div className = {styles.ContactData}>\r\n        {form}\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        ingr: state.burgerBuilder.ingredients,\r\n        cost: state.burgerBuilder.cost,\r\n        loading: state.order.loading,\r\n        userId: state.login.userId,\r\n        token: state.login.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        handleBurgerOrder: (postData,token)=>dispatch(orderActions.handleBurgerOrder(postData,token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WithError(ContactData,axios));","import React from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from '../../containers/ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Checkout extends React.Component{\r\n\r\n    checkoutCancel = ()=>{\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinue = () =>{\r\n        this.props.history.replace('checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        let summary = <Redirect to = '/'/>\r\n        let purchasedRedirect = this.props.purchased ? <Redirect to = '/'/> : null;\r\n        \r\n        if(this.props.ingr){\r\n            summary = (<div>\r\n            {purchasedRedirect}\r\n            <CheckoutSummary \r\n                ingredients = {this.props.ingr}\r\n                cancelFunction = {this.checkoutCancel}\r\n                continueFunction = {this.checkoutContinue}/>\r\n            <Route \r\n                path = {this.props.match.path + '/contact-data'} \r\n                component = {ContactData}\r\n                />\r\n        </div>)\r\n        }\r\n\r\n        return summary;\r\n    };    \r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        ingr: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport styles from './Order.module.css';\r\n\r\nconst order = (props) =>{\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({name: ingredientName, val: props.ingredients[ingredientName]});\r\n    }\r\n\r\n    const ingredientText = ingredients.map((ig)=>{\r\n        return <span key = {ig.name}> {ig.name}:({ig.val}) </span>\r\n    })\r\n\r\n    return(\r\n        <div className = {styles.Order} key = {props.id}>\r\n            <p>item {ingredientText}</p>\r\n            <p>Total cost <b>{props.cost}</b></p>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport WithError from '../../hoc/WithError/WithError';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends React.Component{\r\n\r\n    componentDidMount(){\r\n       this.props.handleFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render(){\r\n\r\n    let orders = <Spinner/>;\r\n    \r\n    if(!this.props.loading){\r\n    orders = \r\n    (<div>\r\n        {this.props.orders.map((order)=>(\r\n            <Order \r\n            key = {order.id}\r\n            ingredients = {order.ingredients}\r\n            cost = {order.cost}\r\n            />\r\n        ))}\r\n    </div>\r\n    );\r\n    }\r\n    \r\n    return orders;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        loading: state.order.loading,\r\n        orders: state.order.orders,\r\n        token: state.login.token,\r\n        userId: state.login.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        handleFetchOrders: (token,userId)=>dispatch(actions.handleFetchOrders(token,userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WithError(Orders, axios));","import React, {Component, Fragment} from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Styles from './LoginScreen.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {checkValidity} from '../../shared/shared';\r\n\r\nclass LoginScreen extends Component {\r\n    state = {\r\n        inputs: {\r\n            email: {\r\n            elementType: 'input',\r\n            elementConfig:{\r\n                type : 'text',\r\n                placeholder : 'Email',\r\n                name : 'email '\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            moded: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type : 'password',\r\n                    placeholder : 'Password',\r\n                    name : 'password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false,\r\n                moded: false\r\n                }\r\n        },\r\n        register: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        if( !this.props.isBuilded && this.props.redirectUrl !== '/'){\r\n            this.props.redirectUrl()\r\n        }\r\n    }\r\n\r\n    changeValHandler = (event, controlName) => {\r\n\r\n        const updatedInputs = {\r\n            ...this.state.inputs,\r\n            [controlName]: {\r\n                ...this.state.inputs[controlName],\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value , this.state.inputs[controlName].validation),\r\n                moded: true\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            inputs: updatedInputs\r\n        });\r\n    }\r\n\r\n    handleLoginClick = (event)=>{\r\n        event.preventDefault();\r\n        this.props.loginHandle(this.state.inputs.email.value,this.state.inputs.password.value,this.state.register);\r\n    }\r\n\r\n    changeMethod = () =>{\r\n        this.setState(prevState =>{\r\n            return{\r\n                register : !prevState.register\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let formArray = [];\r\n\r\n        for (let keyVal in this.state.inputs){\r\n            formArray.push(\r\n                {\r\n                    id: keyVal,\r\n                    config: this.state.inputs[keyVal]\r\n                }\r\n            )\r\n        }\r\n\r\n        let form = formArray.map(\r\n            (formElement) => {\r\n                return (\r\n                    <Input \r\n                        key = {formElement.id}\r\n                        elementType = {formElement.config.elementType} \r\n                        elementConfig = {formElement.config.elementConfig}\r\n                        value = {formElement.config.value} \r\n                        isValid = {formElement.config.valid}\r\n                        shouldValid = {formElement.config.validation}\r\n                        moded = {formElement.config.moded}\r\n                        change = {(event) =>this.changeValHandler(event, formElement.id)}\r\n                        />);\r\n            }\r\n        )\r\n        \r\n        let loginType = this.state.register ? 'login' :  'register';\r\n        \r\n        let formOutput = null;\r\n\r\n        if(this.props.loading){\r\n            formOutput = <Spinner/>\r\n        }else{\r\n            formOutput = (<Fragment>\r\n                <h2>{this.state.register ? 'Register new user' : 'Login'}</h2>\r\n                <form >\r\n                    {form}\r\n                    <Button \r\n                    buttonType = 'Success'\r\n                    click = {this.handleLoginClick}>\r\n                    Confirm\r\n                    </Button>\r\n                </form>\r\n                <Button\r\n                 buttonType = 'Danger'\r\n                 click = {this.changeMethod}>\r\n                 Switch to: {loginType}\r\n                </Button>\r\n            </Fragment>);\r\n        }\r\n\r\n        let errorOutput = null;\r\n        if(this.props.error){\r\n            errorOutput = <p>{this.props.error}</p>\r\n        }\r\n\r\n        let authRedirect = null\r\n        if(this.props.isAuth)\r\n            authRedirect = <Redirect to = {this.props.urlRedirect}/>\r\n\r\n        return (<div className = {Styles.LoginScreen}>\r\n           {authRedirect}\r\n           {errorOutput}\r\n           {formOutput}\r\n           </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.login.load,\r\n        error: state.login.error,\r\n        isAuth: state.login.token !== null,\r\n        urlRedirect: state.login.urlRedirect,\r\n        isBuilded: state.burgerBuilder.isBuilded\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        loginHandle : (email,password,isRegister)=>dispatch(actions.loginHandle(email,password, isRegister)),\r\n        redirectUrl : ()=>dispatch(actions.changeRedirect('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginScreen);","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Logout extends Component{\r\n    componentDidMount(){\r\n        this.props.logUserOut();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to = '/' />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n       logUserOut : ()=>dispatch(actions.logOut())\r\n    };\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport Layout from './containers/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\r\nimport LoginScreen from './containers/LoginScreen/LoginScreen';\r\nimport Logout from './components/Logout/Logout';\r\nimport * as actions from './store/actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    this.props.checkLoginStatus();\r\n  }\r\n\r\n  render() {\r\n\r\n    let routes = (\r\n      <Switch>\r\n        <Route path = '/' exact component = {BurgerBuilder}/>\r\n        <Route path = '/login' component = {LoginScreen}/>\r\n        <Redirect to = '/' />\r\n      </Switch>\r\n    );\r\n\r\n    if(this.props.isAuth){\r\n      routes = (\r\n        <Switch>\r\n          <Route path = '/login' component = {LoginScreen}/>\r\n          <Route path = '/checkout' component = {Checkout}/>  \r\n          <Route path = '/orders' component = {Orders}/>  \r\n          <Route path = '/logout' component = {Logout}/>\r\n          <Route path = '/' exact component = {BurgerBuilder}/>\r\n          <Redirect to = '/' />\r\n        </Switch>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    isAuth: state.login.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    checkLoginStatus : () => dispatch(actions.checkLoginStatus())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProps)=>{\r\n    return{\r\n    ...oldObject,\r\n    ...updatedProps\r\n}\r\n};\r\n\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utitlity';\r\n \r\nconst initialState = {\r\n    ingredients: {},\r\n    cost: 2,\r\n    error: null,\r\n    isBuilded: false\r\n}\r\n\r\nconst INGREDIENT_PRICE = {\r\n    salad: 0.2,\r\n    bacon: 1,\r\n    cheese: 0.5,\r\n    meat: 2\r\n}\r\n\r\nconst addIngredient = (state,action)=>{\r\n    const updatedIngredientAdd = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredientsAdd = updateObject(state.ingredients, updatedIngredientAdd);\r\n    const updatedStateAdd = {\r\n        ingredients: updatedIngredientsAdd,\r\n        cost: state.cost + INGREDIENT_PRICE[action.ingredientName],\r\n        isBuilded: true \r\n    }\r\n\r\n    return updatedStateAdd\r\n}\r\n\r\nconst removeIngredient =(state,action)=>{\r\n    const updatedIngredientRem = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n            const updatedIngredientsRem = updateObject(state.ingredients, updatedIngredientRem);\r\n            const updatedState = {\r\n                ingredients: updatedIngredientsRem,\r\n                cost: state.cost + INGREDIENT_PRICE[action.ingredientName],\r\n                isBuilded: true \r\n            }\r\n    \r\n    return updatedState\r\n}\r\n\r\nconst reducer = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n        return addIngredient(state,action);\r\n        \r\n        case actionTypes.REMOVE_INGREDIENT:\r\n        return removeIngredient(state,action);\r\n\r\n        case actionTypes.INIT_INGRIDIENTS:\r\n        return updateObject(state,{ cost: 2,ingredients:action.ingredients, error: false, isBuilded: false})\r\n\r\n        case actionTypes.INIT_INGRIDIENTS_FAIL:\r\n        return updateObject(state,{error: true})\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utitlity';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    orders: [],\r\n    purchased: false,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case(actionTypes.BURGER_ORDER_SUCCESS):\r\n\r\n        const newOrder = {\r\n            ...action.orderData,\r\n            id: action.id\r\n        }\r\n\r\n        return updateObject(state,\r\n            {orders: state.orders.concat(newOrder),\r\n            loading: false,\r\n            purchased: true}\r\n        );\r\n        \r\n        case(actionTypes.BURGER_ORDER_FAIL):\r\n        return updateObject(state,{\r\n            error: action.error,\r\n            loading: false\r\n        })\r\n\r\n        case(actionTypes.BURGER_ORDER_LOAD):\r\n        return updateObject(state,{loading: true});\r\n\r\n        case(actionTypes.BURGER_ORDER_INIT):\r\n        return updateObject(state,{purchased: false});\r\n\r\n        case(actionTypes.FETCH_ORDERS_LOAD):\r\n        return updateObject(state,{loading: true});\r\n\r\n        case(actionTypes.FETCH_ORDERS_FAIL):\r\n        return updateObject(state,{loading: false, error: action.error});\r\n\r\n        case(actionTypes.FETCH_ORDERS_SUCCESS):\r\n        return updateObject(state,{orders: action.fetchedOrders, loading: false});\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utitlity';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    load: false,\r\n    urlRedirect: '/'\r\n}\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case(actionTypes.LOGIN_SUCCESS):\r\n            return updateObject(state,{\r\n                token: action.token,\r\n                userId: action.userId,\r\n                load: false,\r\n                error: null\r\n            });\r\n        \r\n        case(actionTypes.LOGIN_START):\r\n            return updateObject(state,{load: true, error: null});\r\n        \r\n        case(actionTypes.LOGIN_FAIL):\r\n            return updateObject(state,{error: action.error, load: false});\r\n        \r\n        case(actionTypes.LOGIN_LOGOUT):\r\n            return updateObject(state,{userId: null, token: null});\r\n\r\n        case(actionTypes.REDIRECT_CHANGE):\r\n            return updateObject(state,{urlRedirect: action.urlRedirect});\r\n        \r\n        default: return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport ordersReducer from './store/reducers/order';\r\nimport loginReducer from './store/reducers/login';\r\nimport thunk from 'redux-thunk';\r\nrequire('dotenv').config();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        burgerBuilder: burgerBuilderReducer,\r\n        order: ordersReducer,\r\n        login: loginReducer\r\n    }\r\n);\r\n\r\nconst store = createStore(rootReducer,composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(<Provider store = {store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}